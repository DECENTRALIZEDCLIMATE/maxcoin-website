[
  
  {
    "title": "Maxcoin IPFS nodes",
    "url": "/posts/maxcoin-ipfsnodes/",
    "categories": "Developers, Services",
    "tags": "Developers, Services",
    "date": "2022-05-19 08:00:00 -0500",
    





    "snippet": "The Maxcoin project in its efforts to decentralize as much as possible its ecosystem, now is working on having ipfs nodes which can host multiple services like our web3 website, decentralized blockchain bootstrap backups, and other functions that might come in the future. The following guide is on how to setup an IPFS node for Maxcoin Requirements if you want to contribute and provide some infrastructure for the current and future projects. This guide is based  on Debian 11 and Ubuntu 18.04, improvements to the current manual are always welcome.IPFS Instalation 1      Download the Linux binary from dist.ipfs.io.    wget https://dist.ipfs.io/go-ipfs/v0.12.2/go-ipfs_v0.12.2_linux-amd64.tar.gz            Unzip the file:    tar -xvzf go-ipfs_v0.12.2_linux-amd64.tar.gz&amp;gt; x go-ipfs/install.sh&amp;gt; x go-ipfs/ipfs&amp;gt; x go-ipfs/LICENSE&amp;gt; x go-ipfs/LICENSE-APACHE&amp;gt; x go-ipfs/LICENSE-MIT&amp;gt; x go-ipfs/README.md            Move into the go-ipfs folder and run the install script:    cd go-ipfssudo bash install.sh&amp;gt; Moved ./ipfs to /usr/local/bin            Test that IPFS has installed correctly:    ipfs --version&amp;gt; ipfs version 0.12.0      Setup ipfs service for maxcoinFirst time config setup for a server:      ipfs init --profile server  This removes local discovery requestsSetup Circuit Relay V2Add swarm address in the config (specifically the ws line):       ipfs init —- profile server&quot;Swarm&quot;: [         &quot;/ip4/0.0.0.0/tcp/4001&quot;,         &quot;/ip4/0.0.0.0/tcp/4004/ws&quot;,         &quot;/ip6/::/tcp/4001&quot;,         &quot;/ip4/0.0.0.0/udp/4001/quic&quot;,         &quot;/ip6/::/udp/4001/quic&quot;       ]Enable Swarm.RelayService with the following command:      ipfs config --json Swarm.RelayService.Enabled trueEnable Swarm.AutoRelay also with the following command:      ipfs config --json Swarm.EnableAutoRelay trueand      ipfs config --json Swarm.RelayClient.Enabled trueMaxcoin special configsChange the gateway port from 8080 to 8081 (since the maxcoind uses 8080 for the rpc)Edit ~/.ipfs/config and change the folling line in the Addresses section:       &quot;Gateway&quot;: &quot;/ip4/0.0.0.0/tcp/8081&quot;,Set IPFS as a daemon and Nginx Reverse ProxySet IPFS as a daemonCopy the following lines after the sudo vim... command, modify user and path to ipfs so that it matches with your system and user that runs ipfs:    $ sudo vim /etc/systemd/system/ipfs.service      [Unit]   Description=IPFS Daemon      [Service]   ExecStart=/usr/local/bin/ipfs daemon --enable-pubsub-experiment   User=nodemaster   Restart=always   LimitNOFILE=10240      [Install]   WantedBy=multi-user.targetNOTE: in this example user that runs ipfs is nodemaster, also the ipfs location is at /usr/local/bin/ipfs if you don’t know the path, try $ whereis ipfsEnable the service    $ sudo systemctl daemon-reload    $ sudo systemctl enable ipfs.service    $ sudo systemctl start ipfs.service    $ sudo systemctl status ipfs.serviceNOTE: service must be set as active (running), if not please verify the preview stepsNginx Reverse Proxy for a public gateway and websocketThe Gateway setup:Change the server name for your own domain name:   server {       listen 80;        server_name gateway.maxcoinproject.net;       location / {           proxy_pass http://localhost:8081;           proxy_set_header Host $host;           proxy_cache_bypass $http_upgrade;           allow all;       }   }  Note: Remember to enable the service and get ssl with certbotEnable Secure WebSocket with nginx   server {       listen 80;        server_name ipfsnode.maxcoinproject.net;       location / {           proxy_pass http://127.0.0.1:4004;           proxy_http_version 1.1;           proxy_set_header Upgrade $http_upgrade;           proxy_set_header Connection &quot;upgrade&quot;;       }   }  Note: Remember to enable the service and get ssl with certbotTestingVerify Secure WebSocket connectionDoing an IPFS ping   maxcoin@MAXCOIN01:~/.ipfs$ ipfs ping /dns4/ipfsnode2.maxcoinproject.net/tcp/443/wss/p2p/12D3KooWEEtWg9ferUVENWeomJHaURHJ6e1UzHAKYiESaSeVGv6v   PING 12D3KooWEEtWg9ferUVENWeomJHaURHJ6e1UzHAKYiESaSeVGv6v.   Pong received: time=161.27 ms   Pong received: time=161.13 ms   Pong received: time=161.55 msDoing a swarm connect   maxcoin@MAXCOIN01:~/.ipfs$ ipfs swarm connect /dns4/ipfsnode2.maxcoinproject.net/tcp/443/wss/p2p/12D3KooWEEtWg9ferUVENWeomJHaURHJ6e1UzHAKYiESaSeVGv6v   connect 12D3KooWEEtWg9ferUVENWeomJHaURHJ6e1UzHAKYiESaSeVGv6v successcheck the IPFS public Gateway:Browse by adding /ipns/ipfs.io/ to your gateway address:  You should see the IPFS official web3 websiteExample:https://gateway.maxcoinproject.net/ipns/ipfs.io/LicenseUNLICENSE. ?Contact.Developers  David Serrano  p1r0ToDo/Proposal  Setup a Maxcoin testnodes health by forking this code  Setup and handle data with ipfs-clusterReferences  Install IPFS CLI  file transfer  circuit relay  understanding circuit relay  experimental features"
  },
  
  {
    "title": "MIP3 - SSL Update Fix",
    "url": "/posts/MIP3-informational/",
    "categories": "MIPs, Core",
    "tags": "MIPs, Core",
    "date": "2022-05-03 21:15:00 -0500",
    





    "snippet": "            MIP      3              title      SSL Update Fix              description      A well known issue with libssl that requires to be fixed              author      p1r0 (@P1R)              discussion-to      https://github.com/orgs/Max-Coin/teams/maxcoin-community-devs              status      Draft              type      Security              created      2022-05-03              requires (optional)      MIP number(s)      AbstractThis is a well known issue when the libssl got updated and most of the Linux distributions did update with itMultiple solutions came across different blockchains, since we are based on bitcoin and blakecoin we might as well do some of this updatesMIP Workflow  Research  Setup test enviorment  Fix  Build and Test  ReleaseCommentsFollow up how LiteCoin solved this issue. - p1r0Look for the issue displayed by github - p1r0[Security] RSA signature validation vulnerability on maleable encoded message in jsrsasignhttps://github.com/advisories/GHSA-27fj-mc8w-j9wg/dependabot?query=user:Max-CoinReferences  https://github.com/BlueDragon747/Blakecoin/commit/07eb893ca4f63f1fa787b9256e1d29368c2af3bc  https://github.com/BlueDragon747/Blakecoin/commit/d8c747357cd6deb1b7e3d37e06441b5615e97e02  https://github.com/peercoin/peercoin/commit/5b09830e5de0f5105534e69dbf4acffb3255869b  https://github.com/bitcoin/bitcoin/issues/7086  https://github.com/cygnusxi/CurecoinSource/pull/48/commits/6b93af07005b90e4f6c5785c60c10c36fa52a333  https://github.com/bitcoin/bitcoin/pull/5949  https://github.com/bitcoin/bitcoin/pull/6954"
  },
  
  {
    "title": "MIP2 - Setup Bootstrap Sync",
    "url": "/posts/MIP2-informational/",
    "categories": "MIPs, Core",
    "tags": "MIPs, Core",
    "date": "2022-05-03 07:30:00 -0500",
    





    "snippet": "            MIP      2              title      Setup Bootstrap Sync              description      include scripts for generating bootstrap.dat backups              author      p1r0 (@P1R)              discussion-to      https://github.com/orgs/Max-Coin/teams/maxcoin-community-devs              status      Draft              type      Informational              created      2022-05-03              requires (optional)      MIP number(s)      Abstractby creating a boostrap.dat image, and publish into an IPNS (pinned in multiple servers) and the usage of circuit relay we will be hable tu do nightly updates synced to one node that can be monitored, a second node can maybe work on weekly updates. There is already a tool inside the bitcoin core code for this prouposes, A considertion might be to clone it into the maxcoin repo if it works properly.MIP Workflow  Create a bootstrap.dat file  Test if it can regenerate the blockchain faster than just a sync.  Use the bitcoin scripts or others to automate the process  Use crontab for update daily and weekly snapshots  Publish on a site with a sha256 hash  Publish automatically to an IPNS service name and add pins to multiple nodes so that they updateSecurity ConsiderationsThe IPFS CID can be shown in the official site and github repo so that people do not download a compromised version of the maxcoin blockchainCommentsp1r0 Created at: 06/17/2021 17:30 Updated at: 06/17/2021 17:30The code from linearize is modified so that it can run on maxcoin.First part ran without problems, but the second part has a memory issue (probably no enought).gonna do some debugg, wait for my laptop blockchain to reach 100% sync (now at 75%) and retest it on my laptop with 16 ram gigs… Not set onHoldp1r0 Created at: 06/20/2021 13:45 Updated at: 06/20/2021 13:45fixed code since there was a bug in it…updated this patchhttps://github.com/bitcoin/bitcoin/pull/16802p1r0 Created at: 06/22/2021 00:45 Updated at: 06/22/2021 00:45Linearize gets frozen at the end (might need some debugging)… still the handmade bootstrap.dat works… but might not be the proper (cleaner) way to do itp1r0 Created at: 07/08/2021 02:23 Updated at: 07/08/2021 02:23Testing import to a windows Machine, after the import I will create another bootstrap.dat file but with the linearize app. For now just require to debug the python linearize tool on the current linux blockchain, look for logs and why it stucks on this specific block:557d…e70eReferences  1 Bitcoin Bootstrap.dat - Where to find and how to use Bootstrap.dat file - 2021-06-17  2 bitcoin/contrib/linearize at master · bitcoin/bitcoin · GitHub -	2021-06-14  3 Creating my own bootstrap.dat? - Bitcoin Stack Exchange 2021-06-14  4 understanding-ipfs-circuit-relay-ccc7d2a39 	Related 	p1r0 	06/14/2021  5 Fixed code since there awas a butg in it.. uipdated this patch"
  },
  
  {
    "title": "Miscellaneous Maxcoin Community &amp; Developer Proposals",
    "url": "/posts/MIP-Miscellaneous/",
    "categories": "MIPs, Core",
    "tags": "MIPs, Core",
    "date": "2022-04-14 04:30:00 -0500",
    





    "snippet": "  https://hedera.com/ integration  Service Status Page  Coinomi multi-wallet integration  Maxcoin, Monero and BTC atomic swaps  Maxcoin Docker Setup  Masterdon Integration  i2P Integration  DAO Uniswap Integration  On Site equations for: sha3/keccak, schnorr, KGW  Fix website caching bug of IPFS data  Post: how to add nodes manually and nodes list  Post: Maxcoin Decentralized Domain Operations"
  },
  
  {
    "title": "Maxcoin VM images",
    "url": "/posts/maxcoin-vmimages/",
    "categories": "Developers, Tools",
    "tags": "Developers, Projects, ToDo",
    "date": "2022-02-10 16:00:00 -0500",
    





    "snippet": "Currently we have three images supporting virtualbox, vmware and kvm. They come with precompiled maxcoin wallet, the images just require you to setup the maxcoin.conf file, setup your password, and you are ready to sync!1. Download the image for your preferred virtualization software.  KVM image  VirtualBox image  VMWARE image  NOTE: Once downloaded, you must verify the images integrity which should match the sha256 checksum hash compare it with the checksums-images.txt.Login Info            Username      Password                  maxcoin      maxcoin        NOTE: the maxcoin user is sudoerInstall and Setup the virtual machine for VirtualBox  Download and install 7Zip or already have a software that can un7zip 7zip files.  Download VirtualBox from https://www.virtualbox.org/wiki/Downloads and get the one that fits your Operative System.  Download the VirtualBox image  Install virtualbox folloing one of the manuals          For windows follow the Part 1 only      For MacOS follow the Part 2 only      For Linux follow the Part 3 only        un7zip the downloaded VDI tar.xz file  Follow the osboxes guide to setup the extracted image https://www.osboxes.org/guide/ at the VirtualBox SectionSetup/Mount a folder to share between guest and host.To setup a shared folder betwwn guest and host use this guide  NOTE:The guest folder is used for dev and git updates.The host folder is used to compile and run source code in guest folder.REMEMBER TO UPDATE THE maxcoin.conf file and update your PASSWORD.Install and Setup the virtual machine for KVM (GNU/Linux)  Download the KVM image.  Decompress the tar.xz image.  Install kvm with qemu support by following one of this manuals          Ubuntu Guide      Debian Guide      Centos KVM      Arch Guide        Import the qcow2 image from qemu, following this guide from  the 2. Import Qcow2 images using Virt-managersection.Latest Blockchain automatic backups. (approx. 10 hours to sync)In case your blockchain sync is going too slow, we have a temporal solution that is downloading the latest blockchaincopy, Please refer to MIP2 if you want to help us distribute it in a better way  Download the latest MaxCoin BlockChain  Verify the hash corresponds to 6d73ef55cc7f1964bea3da875cb0aff1a992ffd9325dd81c2645fd290c20db38Execute the following command to the downloaded file:$sha256sum maxcoinBlockChainBack-1651801511.tar.xz 6d73ef55cc7f1964bea3da875cb0aff1a992ffd9325dd81c2645fd290c20db38  maxcoinBlockChainBack-1651801511.tar.xz  Note: if the hash is diferent from this one, do not follow up and contact us at the telegram channel  move the file to your home directory and extract the file    $cd ~ &amp;amp;&amp;amp; tar xvf maxcoinBlockChainBack-1651801511.tar.xz          execute the maxcoin-qt wallet    $cd ~/maxcoin &amp;amp;&amp;amp; ./maxcoin-qt        LicenseUNLICENSE. ?Contact.Developers  David Serrano  p1r0ToDo/Proposal  Integrate dnsseed script and precopiled.  Integrate the linked manuals to the main howto and use them as references instead.  Check license for documentation."
  },
  
  {
    "title": "Maxcoin Testnet",
    "url": "/posts/maxcoin-testnet/",
    "categories": "Developers, Projects",
    "tags": "Developers, Projects, ToDo",
    "date": "2022-02-10 06:00:00 -0500",
    





    "snippet": "Setup Maxcoin TestnetBuilding on Linux  NOTE: These instructions have been tested and verified on Ubuntu 18.04To install the required dependencies, run the following command from Ubuntu:$ sudo apt update$ sudo apt install -y git build-essential libssl1.0-dev libboost-all-dev libdb-dev libdb++-dev libminiupnpc-dev libqrencode-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools qt5-defaultThen grab the latest version of the MaxCoin source code from Github:cd ~git clone https://github.com/Max-Coin/MaxCoin.gitcd MaxCoin/srcTo build the daemon, run the following command:make -f makefile.unixOptionally, debugging symbols can be removed from the binary to reduce its size. This can be done using strip:strip maxcoindEdit maxcoin.confGet a copy of the  maxcoin.conf example:$ mkdir ~/.maxcoin/$ mkdir ~/.maxcoin/testnet$ cp ~/MaxCoin/maxcoin-EXAMPLE.conf ~/.maxcoin/testnet/maxcoin.confEdit the maxcoin.conf:$ nano ~/.maxcoin/maxcoin.confThe maxcoin.conf should have the following:# Run on the test network instead of the real maxcoin network.testnet=1# Use as many addnode= settings as you like to connect to specific peers.addnode=a.seed.maxcoinproject.net:18668addnode=b.seed.maxcoinproject.net:18668rpcallowip=127.0.0.1# Listen for RPC connections on this TCP port.rpcport=8181# Mining is initially enabled.gen=1  NOTE: the file in this example was stored at ~/.maxcoin/testnet/maxcoin.confNOTE2: REMEMBER TO CHANGE THE PASSWORD AT THE MAXCOIN.CONFRun Maxcoin Testnet Server$ cd ~/MaxCoin/src/$ ./maxcoind -daemon --testnet$ ./maxcoind  stop$ ./maxcoind -daemon --testnet -conf=testnet/maxcoin.confVerify connected peerscurl --user maxcoinrpc --data-binary &#39;{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;: &quot;curltest&quot;, &quot;method&quot;: &quot;getpeerinfo&quot;, &quot;params&quot;: []}&#39; -H &#39;content-type: text/plain;&#39; http://127.0.0.1:8080/  NOTE: The required password is the one you set at the maxcoin.conf file.Testnet DataPortTCP 18668Genesis (log)SetBestChain: new best=0000000a23e3eb42dc87b61d4015c80ffd85471d34e2c7210c7ca63b78a58612  height=0  log2_work=24.000022  tx=1  date=2014-01-22 23:41:21 progress=0.0000002021-10-06 22:08:21 ResetSyncCheckpoint: sync-checkpoint reset to 0000000a23e3eb42dc87b61d4015c80ffd85471d34e2c7210c7ca63b78a58612MagicNumbers    pchMessageStart[0] = 0x0b;    pchMessageStart[1] = 0x11;    pchMessageStart[2] = 0xbb;    pchMessageStart[3] = 0x07;  Code lines with the Maxcoin testnet magic numbersPublic Nodes  a.seed.maxcoinproject.net:18668  b.seed.maxcoinproject.net:18668  dnsseed.testnet.maxcoinproject.net:18668  dnsseed.testnet.maxcoinproject.com:18668  dnsseed.testnet.decentralizeduser.com:18668ToDo / Future Development  Create a block explorer  Create a faucet site  Fork bitcoin-testnet-box?Contact.Developers  David Serrano  p1r0References  maxcoin build documentation"
  },
  
  {
    "title": "Maxcoin Seeder",
    "url": "/posts/maxcoin-seeder/",
    "categories": "Developers, Projects",
    "tags": "Developers, Projects, ToDo",
    "date": "2022-02-10 05:00:00 -0500",
    





    "snippet": "maxcoin-seeder is a crawler for the MaxCoin network, which exposes a listof reliable nodes via a built-in DNS server. It is a fork of bitcoin-seeder.FEATURES  Regularly revisits known nodes to check their availability  Bans nodes after enough failures, or bad behaviour  Accepts nodes down to v0.3.19 to request new IP addresses from,but only reports good post-v0.3.24 nodes.  Keeps statistics over (exponential) windows of 2 hours, 8 hours,1 day and 1 week, to base decisions on.  Very low memory (a few tens of megabytes) and cpu requirements.  Crawlers run in parallel (by default 96 threads simultaneously).REQUIREMENTS  Debian based GNU/linux without systemd-resolvd (recommended Ubuntu 16.04).  Have a public IP Address with access to the port 53  Have a domain name and access to configure registries on it.  build-essential  libboost-all-dev  libssl-dev  Note: if your OS has systemd-resolvd reference to Known  the KNOWN ISSUES sectionInstall dependencies:$ sudo apt-get install build-essential libboost-all-dev libssl-devCOMPILINGFirst we get the repository maxcoin-seeder code$ git clone https://github.com/Max-Coin/maxcoin-seeder$ cd maxcoin-seederCompiling will require boost and ssl.  On debian systems, these are providedby libboost-dev and libssl-dev respectively.$ makeThis will produce the dnsseed binary.USAGE  Best practice is to have a maxcoin daemon with the blockchain on the same server as a public nodeAssuming you want to run a dns seed on dnsseed.example.com, you willneed an authorative NS record in example.com’s domain record, pointingto for example vps.example.com:$ dig -t NS dnsseed.example.com;; ANSWER SECTIONdnsseed.example.com.   86400    IN      NS     vps.example.com.On the system vps.example.com, you can now run dnsseed:./dnsseed -h dnsseed.example.com -n vps.example.com  If you want the DNS server to report SOA records, please provide ane-mail address (with the @ part replaced by .) using -m.Usage with testnet enabled  Best practice is to have a maxcoin daemon with the testnet blockchain on the same server as a public node./dnsseed --testnet -h dnsseed.example.com -n vps.example.comUsage with tor enabledServer Side  Requirement: install tor (# apt install tor)if you follow this tutorialHow To Setup tor nodeRemember that Maxcoin uses 8668 tcp port and 18668 for the testnet./dnsseed -o 127.0.0.1:9050 -h dnsseed.example.com -n vps.example.comClient Side  Requirement: install tor (# apt install tor)First, you can just add it to the command line:$ maxcoind -proxy=127.0.0.1:9050 -addnode=mqrlomy4wdddohem.onion:8668 -listen -debug=torOr you can add it to your maxcoin.conf file:proxy=127.0.0.1:9050addnode=mqrlomy4wdddohem.onion:8668listen=1debug=torThe debug param tells it to print info about tor when the service comes up so you can see if anything is not working.When you bring up the service, you should see a statement like  NOTE: mqrlomy4wdddohem.onion:8668 is an official maxcoin tor dnsseed address.RUNNING AS NON-ROOTTypically, you’ll need root privileges to listen to port 53 (name service).One solution is using an iptables rule (Linux only) to redirect it toa non-privileged port:$ iptables -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-port 5353If properly configured, this will allow you to run dnsseed in userspace, usingthe -p 5353 option.KNOWN ISSUESSPECIAL INSTRUCTIONS FOR UBUNTU USERSAll Ubuntu releases starting with 16.10 (first released in October 2016) come installed with systemd-resolved, which effectively prevents the seeder’s built-in DNS server from working correctly. This is due to both applications requiring use of port 53, and systemd-resolved takes priority by default. There are a few ways to resolve this issue:1.- Force the seeder to bind to a specific IP address by adding the following argument to the terminal cmd: -a &amp;lt;ip address&amp;gt;. This is the recommended solution as it doesn’t require disabling of any operating system services.Example:sudo ./dnsseed -h dnsseed.example.com -n vps.example.com -a 123.231.123.2312.- Disable binding of systemd-resolved to port 53 by editing the /etc/systemd/resolved.conf file and adding this line to the bottom of the file:DNSStubListener=noSave and reboot, and now systemd-resolved will no longer interfere with the seeder’s DNS server.  NOTE: This method is only supported by systemd 232 and newer. You can check your version of systemd with the cmd: systemctl --version3.- Completely disable the systemd-resolved service with the following cmds (not recommended as it may cause undesired side-effects if you use the same server for anything other than running the seeder app):sudo systemctl disable systemd-resolvedsudo systemctl stop systemd-resolvedFIX KNOWN ISSUES AFTER PROCEDURE 2 OR 3Sometimes after the procedure 2 or 3 there is an issue with the dns resolving addresses so it is recommended to follow this solution:1.- Delete the resolv.conf file:sudo rm -f /etc/resolv.conf2.- Edit, add dns servers configs and write the file.sudo vim /etc/resolv.conf  Example config at the /etc/resolv.conf file:nameserver 1.1.1.1nameserver 1.0.0.1~3.- Set linux file system file attribute to cannot be modifiedsudo chattr +i /etc/resolv.conf 4.- Restart the network config depeding on your configuration  Option 1:sudo /etc/init.d/networking restart   Option 2:sudo netplan applyToDo  Support Linux systems with systemd-resolvd service  Support the new tor v3 addresses  Add to the virtual machines images with an autoconfig script.CONTACTDevelopers  David Serrano  p1r0  Maxcoin telegram groupREFERENCES  maxcoin-seeder  Litecoin Seeder README  Systemd issues  Video seeder example setup  Node tor configs for bitcoin  Set dns servers for ubuntu"
  },
  
  {
    "title": "Maxcoin Governance DAO",
    "url": "/posts/maxcoin-dao/",
    "categories": "Governance, DAO",
    "tags": "Governance, DAO",
    "date": "2021-12-15 03:31:00 -0500",
    





    "snippet": "DMAXAbstractThe Maxcoin DAO provides the governance and incentive participation Maxcoin Project needs to develop and make decisions in a decentralized manner, all whilst making Maxcoin a deflationary currency. In the following document we describe the technologies, protocols and processes that make it work.DMAX Features  DAO verified 1 to 1 with the ERC20 token (DMAX)  With a burn address, maxcoin (max) becomes deflationary.  10000 Maxcoin Minimum with a signed address going to the maxcoin burn address.  DMAX becomes an Ethereum ERC20 Token.  Anyone can participate in and have voting power based on token amount.  To have a built-in incentives for dao users to verify maxcoins sent to burn address and verify DMAX tokens.Protocols and Tech Requirements  Maxcoin Project.  Ethereum Platform.  Aragon Client (DAO and Quadratic Voting).  Aragon Agent (DMAX management).Actors and Systems Use Case  Maxcoin User  Maxcoin User Wallets (Maxcoin and Ethereum)  Maxcoin DAO (Votes and verifies)  Maxcoin DAO Tech (Aragorn, Ethereum Network, etc..)  Maxcoin Blockchain Tech (Burning Address)  Note: ToDo… use case diagramProcess Description  The Maxcoin user sends Maxcoin to the burning address  The Maxcoin user creates a request with the Transaction ID (TxID) at the Maxcoin DAO (based on Aragon client and Aragon Agent) And the Ethereum wallet address that will receive the DMAX token.  The Maxcoin DAO Members and already DMAX Holders will have the possibility to participate in the verification process. By doing Quadratic Voting (Aragon client module) we will generate a DMAX paired 1:1 with the burned Maxcoins, the DAO might take a small fee for voting and doing the process (this fee is to incentivize voters and get faster verifications)  The Maxcoin user gets DMAX in their Ethereum Wallet.Sequence DiagramsequenceDiagram    MaxcoinBlockchain-&amp;gt;&amp;gt;+BurnAddress: User Sends Maxcoin    MaxcoinBlockchain-&amp;gt;&amp;gt;+MaxcoinDAO: Notifies to DAO and sends DMAX address    MaxcoinDAO-&amp;gt;&amp;gt;+MaxcoinDAO: Creates a ballot for verifiers    loop Verification Process        MaxcoinDAO-&amp;gt;&amp;gt;+BurnAddress: MaxcoinDAO Verifies transaction        alt it was Approved            MaxcoinDAO-&amp;gt;&amp;gt;+MaxcoinDAO: Mints DMAX To The Onwers wallet - fee            MaxcoinDAO-&amp;gt;&amp;gt;+MaxcoinDAO: fee gets distributed to the DAO participants        else it was not            MaxcoinDAO--&amp;gt;&amp;gt;-MaxcoinBlockchain: Please verify        end    end  Note Actors wheren´t added, hope someone can make it better soon… -P1r0the mermaid code is not getting interpreted… ToFixReferences  Maxcoin DAO resourcesContact.Developers  David Serrano  p1r0To Do  Create the tokenomics section  Add a conclusion section if required, but might require the DAOs review and further development."
  },
  
  {
    "title": "Maxcoin Philosophy &amp; Principles",
    "url": "/posts/maxcoin-philosophy/",
    "categories": "Governance, Philosophy",
    "tags": "Governance, Philosophy, Principles",
    "date": "2021-12-15 03:15:00 -0500",
    





    "snippet": "What is Maxcoin?We are a Self Governed, tech-oriented, no hype community driven cryptocurrency. We are here for all, whether you’ve been with us since the start, or only just discovered us today.It is your coin and it’s in your hands, a true Eco-system of human interaction thru collaboration.  We are Open Source / FOSS and Transparent, a permission-less system with no gate keeping, No regulation via kings/queens or presidents, just open consensus &amp;amp; organic growth via code and nodes.No Pre-Mine, No ICO, Fair Launch Community CryptocurrencyMaxcoin is a Fair launch, Old School Cryptocurrency with unique coin attribute.Launched in 2014, with no ICO, fundraising, pre-mine or founder rewards. We are battle tested, secure and robust.Why organic growth?Although, the advantages of inorganic growth can be immediate in the cryptocurrency world, we must not forget that that is the world we are escaping. In a post maximalist, blockchain agnostic and interoperable world, we need to be Maxcoiners, not Maximalists and allowed to grown organically, interdependent and decentralized."
  },
  
  {
    "title": "Kimoto Gravity Well",
    "url": "/posts/maxcoin-kimoto-gravity-well/",
    "categories": "Features, Kimoto Gravity Well",
    "tags": "Features, Kimoto Gravity Well",
    "date": "2021-12-08 17:39:00 -0500",
    





    "snippet": "Retargeted with every blockKimoto Gravity Well List:  Kimoto Gravity Well Wikia"
  },
  
  {
    "title": "Schnorr Signing Algorithm",
    "url": "/posts/maxcoin-schnorr/",
    "categories": "Features, Schnorr",
    "tags": "Features, Keccak, Schnorr",
    "date": "2021-12-08 17:27:00 -0500",
    





    "snippet": "Maxcoin addresses use Schnorr for signing algorithm allowing exciting developments such as “native multisig” to be used, and an upgraded cryptographic field for key generation and an increase in performance.Maxcoin uses Secp256r1 as it’s cryptographic field to generate key pairs for addresses: A carefully-designed elliptical curve from which points are selected and used to initialise the public and private keys.The use of the Secp256k1 field is specifically recommended by NIST, an organisation that sets the standards for US government cryptography.Digital Signature:  Includes “Native Multisig”  A future feature for Bitcoin  Uses Secp256r1 (NIST recommended)  Increased Performance  Increased Scalability  Anti-Spam Attacks  Interactive Signature AggregationSome Schnorr Resources:  https://bitcoinmagazine.com/technical/scriptless-scripts-how-bitcoin-can-support-smart-contracts-without-smart-contracts  https://bitcoinmagazine.com/culture/the-power-of-schnorr-the-signature-algorithm-to-increase-bitcoin-s-scale-and-privacy-1460642496  https://medium.com/scalar-capital/scriptless-scripts-25e18fd52ede  https://medium.com/scalar-capital/schnorr-signatures-754038368b87"
  },
  
  {
    "title": "Is Maxcoin Quantum Resistant?",
    "url": "/posts/maxcoin-quantum/",
    "categories": "Features, Quantum Resistant",
    "tags": "Features, Quantum Resistant",
    "date": "2021-12-08 17:20:00 -0500",
    





    "snippet": "      “Proof for the SHA3 Claim that 256 bit security is “POST-QUANTUM SUFFICIENT”?        What security do Cryptographic Sponges offer against generic quantum attacks?        Quantum Attack’s could be the end of Crypto.        Why aren’t we (not maxcoin,but in general) using sha-3?        Estimating the cost of generic quantum pre-image attacks on SHA-2 and SHA-3.  "
  },
  
  {
    "title": "Keccak SHA-3 algorithm for Proof of Work (PoW)",
    "url": "/posts/maxcoin-keccak/",
    "categories": "Features, Keccak SHA3",
    "tags": "Features, Keccak SHA3, PoW",
    "date": "2021-12-08 17:15:00 -0500",
    





    "snippet": "Maxcoins transaction security has been upgraded with next-generation, Keccak SHA-3 algorithm for Proof of Work. Whilst SHA-2 was designed and developed closed-door by the NSA, Keccak was subject to an open competition with design and peer preview (NIST).Keccak was also chosen as the official successor for SHA-256 after being a finalist and finally winning a 5 year long international competition run by the National Institute of Standards and Technology (NIST) and as such chosen as the successor to SHA-256.Special Note: Keccak is also much greener than SHA-256 and many other hashing functions, reducing cryptocurrencies ecological footprint.”Keccak/SHA3 Info:  Winner of 5 year long NIST competition  Next-generation encryption  Official Successor to SHA-256  Not developed closed doors by NSA  Open Peer Reviewed &amp;amp; Designed  Not length-extension attacks vulnerable  Thicker safety margin than SHA-2  Greener than SHA-256"
  },
  
  {
    "title": "Maxcoin Block Explorers",
    "url": "/posts/explorers/",
    "categories": "Use Maxcoin, Explorers",
    "tags": "Use Maxcon, Explorers",
    "date": "2021-12-07 05:30:00 -0500",
    





    "snippet": "Self-Hosted Explorers:  Maxcoin explorer  Maxcoin explorer 2Third Party Explorers:  Open ChainsIf you would like to submit a Maxcoin Exchange to be listed here, please contact us on telegram and let us know."
  },
  
  {
    "title": "MIP1 - Purpose and Guidelines",
    "url": "/posts/MIP1/",
    "categories": "MIPs, Core",
    "tags": "MIPs, Core",
    "date": "2021-12-07 04:30:00 -0500",
    





    "snippet": "AbstractA general guide to follow, which include templates, markdown standards and the governance model required to select editors and modify processes, approve or do changes might also require editor and DAO revision. The goal is to have quality Maxcoin Improvement Proposals.MotivationThe goal is to provide the Maxcoin Improvement Proposals GuidelineMIP Types  Standards  Informational  ProcessesMIP format and structure templateMIPs should be written in markdown format. Based on our Maxcoin site markdownStructure Template            MIP      to be assigned              title      The MIP title is a few words, not a complete sentence              description      Description is one full (short) sentence              author      a comma separated list of the author’s or authors’ name + GitHub username (in parenthesis), or name and email (in angle brackets).  Example, FirstName LastName (@GitHubUsername), FirstName LastName foo@bar.com, FirstName (@GitHubUsername) and GitHubUsername (@GitHubUsername)              discussion-to      URL              status      Draft              type      Standards Track, Meta, or Informational              created      date created on, in ISO 8601 (yyyy-mm-dd) format              requires (optional)      MIP number(s)      This is the suggested template for new MIPs.Note that an MIP number will be assigned by an editor. When opening a pull request to submit your MIP, please use an abbreviated title in the filename, yyyy-mm-dd-mip[number]-draft.md.The title should be 44 characters or less. It should not repeat the MIP number in title, irrespective of the category.AbstractAbstract is a multi-sentence (short paragraph) technical summary. This should be a very terse and human-readable version of the specification section. Someone should be able to read only the abstract to get the gist of what this specification does.MotivationThe motivation section should describe the “why” of this MIP. What problem does it solve? Why should someone want to implement this standard? What benefit does it provide to the Maxcoin Project? What use cases does this MIP address?SpecificationThe key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in RFC 2119.The technical specification should describe the syntax and semantics of any new feature.RationaleThe rationale fleshes out the specification by describing what motivated the design and why particular design decisions were made. It should describe alternate designs that were considered and related work, e.g. how the feature is supported in other languages.Backwards CompatibilityAll MIPs that introduce backwards incompatibilities must include a section describing these incompatibilities and their severity. The MIP must explain how the author proposes to deal with these incompatibilities. MIP submissions without a sufficient backwards compatibility treatise may be rejected outright.Test CasesTest cases for an implementation are mandatory for MIPs that are affecting consensus changes.  If the test suite is too large to reasonably be included inline, then consider adding it as one or more files in /posts/yyyy-mm-dd-mip[number].md.Reference ImplementationAn optional section that contains a reference/example implementation that people can use to assist in understanding or implementing this specification.  If the implementation is too large to reasonably be included inline, then consider adding it as one or more files in /posts/yyyy-mm-dd-mip[number].md.Security ConsiderationsAll MIPs must contain a section that discusses the security implications/considerations relevant to the proposed change. Include information that might be important for security discussions, surfaces risks and can be used throughout the life cycle of the proposal. E.g. include security-relevant design decisions, concerns, important discussions, implementation-specific guidance and pitfalls, an outline of threats and risks and how they are being addressed. MIP submissions missing the “Security Considerations” section will be rejected. An EIP cannot proceed to status “Final” without a Security Considerations discussion deemed sufficient by the reviewers.ChangelogChange logs date created on, in ISO 8601 (yyyy-mm-dd) format and a comment of changesCopyrightTBA : Requires a compatible freeware version or FOSS based onesMIP WorkflowTBA: requires the Governance modelCommentsMIP EditorsTBA: requires the Governance modelChangelog            2021-12-15      first draft for MIP1 - Purpose and Guidelines      LicensesTBA"
  },
  
  {
    "title": "Maxcoin Wallets",
    "url": "/posts/wallets/",
    "categories": "Use Maxcoin, Wallets",
    "tags": "Use Maxcon, Wallets",
    "date": "2021-12-07 04:30:00 -0500",
    





    "snippet": "WalletsMaxcoin Core Contributors are welcome to work on an iOS and Android wallet, but we are also interested in working closely with 3rd Party Wallets where your wallets will be introduced to our growing Maxcoin community.* Core Maxcoin Wallets:*            Name      Operating System      Type      Download              maxcoinQT      Windows      Core Wallet      Download              maxcoinQT      MacOS      Core Wallet      Download              maxcoinQT      Linux      Core Wallet      Download        Note: You can also build the wallet yourself by downloading the Compressed Source Code from the zip, tar.gz file or by cloning the Latest Release git repository.* Other Maxcoin Wallets:*            Name      Operating System      Type      Note              Paper Wallet      WEB      Paper Wallet      Retiring              Maxcoin IPFS Paper Wallet      WEB      IPFS      Soon      Options to sync faster with the blockchainWhile we work on growing and decentralizing maxcoin further (dnsseeds, tor, ipfs, etc..) and speed up the blockchain syncing, we understand the current builds do not have the speed required to get the blockchain, and thus we have faster sync solutions, yet we still encourage people to use the old way and let the wallet sync by its own (3 weeks) to enhance security.There are two ways to speed things up, that are:  Bootstrap image. (approx. 10 days to sync)  Latest Blockchain automatic backups. (approx. 10 hours to sync)1. Bootstrap image. (approx. 10 days to sync)  Download the latest MaxCoin bootstrap.dat.zip:          miror1      miror2        Verify the hash corresponds to 1cdfe13c910a433136f474704531ab5a0461715478c2fefb42db77da360b0af5Execute the following command to the downloaded file:$ sha256sum bootstrap.dat.zip 1cdfe13c910a433136f474704531ab5a0461715478c2fefb42db77da360b0af5  bootstrap.dat.zip  Note: if the hash is diferent from this one, do not follow up and contact us at the telegram channel  move the file to your home directory, extract the file and set it into the config directory    $cd ~ &amp;amp;&amp;amp; unzip bootstrap.dat.zip &amp;amp;&amp;amp; mv bootstrap.dat ~/.maxcoin/         execute the maxcoin-qt wallet and Syncing should start working    $cd ~/maxcoin &amp;amp;&amp;amp; ./maxcoin-qt                Note: For Windows based systems follow up this tutorial Bitcoin Bootstrap.dat - Where to find and how to use Bootstrap.dat file      2. Latest Blockchain automatic backups. (approx. 10 hours to sync)  Download the latest MaxCoin BlockChain  Verify the hash corresponds to 6d73ef55cc7f1964bea3da875cb0aff1a992ffd9325dd81c2645fd290c20db38Execute the following command to the downloaded file:$sha256sum maxcoinBlockChainBack-1651801511.tar.xz 6d73ef55cc7f1964bea3da875cb0aff1a992ffd9325dd81c2645fd290c20db38  maxcoinBlockChainBack-1651801511.tar.xz  Note: if the hash is diferent from this one, do not follow up and contact us at the telegram channel  move the file to your home directory and extract the file    $cd ~ &amp;amp;&amp;amp; tar xvf maxcoinBlockChainBack-1651801511.tar.xz          execute the maxcoin-qt wallet    $cd ~/maxcoin &amp;amp;&amp;amp; ./maxcoin-qt          Special Note Regarding Wallet Sync Time:  It can take upto 7 days or longer for the Maxcoin QT wallet to sync due to 4 years + of blockchain transactions. If you would like to install the full node with rapid syncing, we recommend that you use one of the following methods. We encourage the community to sync, seed and share the following p2p solutions.If you would like to list a 3rd Party Wallet that lists Maxcoin as a supported coin, please contact us on telegram and let us know.If you are a Multi Currency Wallet and would like to support Maxcoin, please contact us on telegram and let us know how so we can help with the process."
  },
  
  {
    "title": "Maxcoin Exchanges",
    "url": "/posts/exchanges/",
    "categories": "Use Maxcoin, Exchanges",
    "tags": "Use Maxcoin, Exchanges",
    "date": "2021-12-07 04:30:00 -0500",
    





    "snippet": "Maxcoin ExchangesAs a community, we believe that when a cryptocurrency is allowed to grow organically thru effective management, planning and development rather than via marketers &amp;amp; financial means, it can stay true to it’s decentralised principles and values. Therefore, Maxcoin does not pay for listings on exchanges and all the following listings are provided for freeList of Exchanges:  FreiExchange  BoaExchange   Bisq  Maxcoin ATM   Yobit  Note: Yobit Deposits and Withdrawals are currently DisabledIf you would like to submit a Maxcoin Exchange to be listed here, please contact us on telegram and let us know."
  },
  
  {
    "title": "Mac Miner Guide",
    "url": "/posts/maxcoin-miners-macmining/",
    "categories": "Miners, Guides",
    "tags": "Maxcoin, Miners, Guides, MacOS",
    "date": "2021-12-05 04:30:00 -0500",
    





    "snippet": "Mac Miner GuideSourcesMac Miner Guide"
  },
  
  {
    "title": "GPU (AMD) Mining Guide",
    "url": "/posts/maxcoin-miners-amdgpu/",
    "categories": "Miners, Guides",
    "tags": "Maxcoin, Miners, Guides, GPUs",
    "date": "2021-12-05 03:47:00 -0500",
    





    "snippet": "by: https://twitter.com/mxjmpbeanGetting Started:  Download sgminer-gm v5.6.1 for PC  Unpack the downloaded file  In the unpacked directory, you will find several bat files.4 files.  Create a new bat file called MAXCOIN-START.bat with the following:  Create MAXCOIN-START.bat Syntax:Syntax:setx GPU_FORCE_64BIT_PTR 0setx GPU_MAX_HEAP_SIZE 100setx GPU_USE_SYNC_OBJECTS 1setx GPU_MAX_ALLOC_PERCENT 100setx GPU_SINGLE_ALLOC_PERCENT 100sgminer.exe –no-submit-stale -k keccak -o stratum+tcp://pool_address:port -u user.worker -p worker_passwordWith thecoin.pw:  You need to create an account and create a worker within your account.  Address: thecoin.pw  Port: 4100  Replace the username and worker from your created account.  Example of thecoin.pw (1 line):sgminer.exe –no-submit-stale -k keccak -o stratum+tcp://thecoin.pw:4100 -u user.worker -p worker_password  Save and run .bat file.With Crypto Hub:  You need to create an account to access the pool.  Address: cryptohub.online  Port: 5000  Replace the username with the email that you used to register. If you wish to specify a worker name, place the worker name after the email, starting with :  Example of Crypto Hub (1 line):    sgminer.exe –no-submit-stale -k keccak -o stratum+tcp://cryptohub.online:5000 -u user@email.com:worker_name -p x        Save and run .bat file.With zpool:  Zpool pays in BTC, so you need to pass your BTC address as username. Zpool does not care about worker password.  Address: keccak.mine.zpool.ca  Port: 5133  Example of zpool (1 line):    sgminer.exe –no-submit-stale -k keccak -o stratum+tcp://keccak.mine.zpool.ca:5133 -u 18QDfuLJnEyHbCvioD39CkuhKZzMUDrRFS -p x        Save and run .bat file.With MiningPoolHub:  You need to create an account and create a worker within your account.  Address: hub.miningpoolhub.com  Port: 20461  Replace the username and worker from your created account.  Example of MiningPoolHub (1 line):    sgminer.exe –no-submit-stale -k keccak -o stratum+tcp://hub.miningpoolhub.com:20461 -u user.worker -p worker_password        Save and run .bat file.  Happy mining!"
  },
  
  {
    "title": "Dual ETH/MAX Guide",
    "url": "/posts/maxcoin-miners-dualmining/",
    "categories": "Miners, Guides",
    "tags": "Maxcoin, Miners, Guides, DualMining",
    "date": "2021-12-05 03:20:00 -0500",
    





    "snippet": "Claymore-Dual-Mining-Guide-MAX-ETH-for-AMD-nVIDIAby: https://twitter.com/mxjmpbeanGetting Started:  Download Claymore’s Dual Ethereum AMD+NVIDIA GPU Miner for Windows from https://bitcointalk.org/index.php?topic=1433925.0  Unpack the downloaded file  In the unpacked directory, you will find start.bat, edit the file with the following:setx GPU_FORCE_64BIT_PTR 0setx GPU_MAX_HEAP_SIZE 100setx GPU_USE_SYNC_OBJECTS 1setx GPU_MAX_ALLOC_PERCENT 100setx GPU_SINGLE_ALLOC_PERCENT 100ethdcrminer64.exe -epool ethereum_pool:port -ewal username.worker -epsw worker_password -esm 3 -dcoin keccak -dpool maxcoin_pool:port -dwal username.worker -dpsw worker_password -allpools 1  Since you are dual mining MaxCoin and Ethereum, you need to specifiy one pool for Ethereum and one pool for MaxCoin. For this guide purposes, we are going to set examples with MaxCoin pools, so you can use any Ethereum pool you wish. Replace ethereum_pool:port, maxcoin_pool:port, username.worker and worker_password according to the pools.With thecoin.pw:  You need to create an account and create a worker within your account.  Address: thecoin.pw  Port: 4100  Replace the username and worker from your created account.  Example for thecoin.pw (1 line):    ethdcrminer64.exe -epool ethereum_pool:port -ewal username.worker -epsw worker_password -esm 3 -dcoin keccak -dpool thecoin.pw:4100 -dwal username.worker -dpsw worker_password -allpools 1        Save and run .bat file.With Crypto Hub:  You need to create an account to access the pool.  Address: cryptohub.online  Port: 5000  Replace the username with the email that you used to register. If you wish to specify a worker name, place the worker name after the email, starting with :  Example for Crypto Hub (1 line):    ethdcrminer64.exe -epool ethereum_pool:port -ewal username.worker -epsw worker_password -esm 3 -dcoin keccak -dpool cryptohub.online:5000 -dwal user@email.com:worker_name -dpsw x -allpools 1        Save and run .bat file.With zpool:  Zpool pays in BTC, so you need to pass your BTC address as username. Zpool does not care about worker password.  Address: keccak.mine.zpool.ca  Port: 5133  Example for zpool (1 line):```sh  ethdcrminer64.exe -epool ethereum_pool:port -ewal username.worker -epsw worker_password -esm 3 -dcoin keccak -dpool keccak.mine.zpool.ca:5133 -dwal 18QDfuLJnEyHbCvioD39CkuhKZzMUDrRFS -dpsw x -allpools 1```  Save and run .bat file.With MiningPoolHub:  You need to create an account and create a worker within your account. This pool supports both MaxCoin and Ethereum, so you can use the same pool for both coins.  MAX pool: hub.miningpoolhub.com  Port: 20461  ETH pool: US: us-east.ethash-hub.miningpoolhub.com  Europe: europe.ethash-hub.miningpoolhub.com  Asia: asia.ethash-hub.miningpoolhub.com  Port: 20535  Replace the username and worker from your created account.  Example for MiningPoolHub (1 line):```sh  ethdcrminer64.exe -epool us-east.ethash-hub.miningpoolhub.com:20535 -ewal username.worker -epsw worker_password -esm 3 -dcoin keccak -dpool hub.miningpoolhub.com:20461 -dwal username.worker -dpsw worker_password -allpools 1```  Save and run .bat file.Here is a youtube vid of someone setting it up on youtube.  Happy Mining!"
  },
  
  {
    "title": "CPU Mining Guide",
    "url": "/posts/maxcoin-miners-cpu/",
    "categories": "Miners, Guides",
    "tags": "Maxcoin, Miners, Guides, CPUs",
    "date": "2021-12-05 02:38:00 -0500",
    





    "snippet": "by: https://twitter.com/mxjmpbeanGetting Started:  Download cpuminer-multi v1.3.1 from https://github.com/tpruvot/cpuminer-multi/releases or our mining software page here.  *note: Not Maxcoin Repo  Unpack the downloaded file  In the unpacked directory, you will find 4 files: 3 exe and 1 bat.  Edit the file RUN-TimeTravel.bat to accommodate your hardware and mining pool.  Edit RUN-TimeTravel.bat Syntax:cpuminer-gw64-corei7 -a keccak -o stratum+tcp://pool_address:port -u your_pool_username.your_miner -p xWith MiningPoolHub:  Address: hub.miningpoolhub.com  Port: 12003  Replace the username and worker from your created account. Example:    cpuminer-gw64-corei7 -a keccak -o stratum+tcp://hub.miningpoolhub.com:12003 -u user.worker -p x        Save and run .bat file.With Mineblocks:  Address: stratum.mineblocks.co.uk  Port: 3027, Diff: 0.1  Port: 3028, Diff: 32  Replace the username with your wallet address.  Example:    cpuminer-gw64-corei7 -a keccak -o stratum+tcp://stratum.mineblocks.co.uk:3027 -u mSpcDussPDMPSZAE5NzNLmerwdiDDiZ9nq -p x        Save and run .bat file.Special Notes:  Most modern CPUs will use cpuminer-gw64-corei7.exe (default in bat file)  Just replace the pool address and port for your favorite pool:  Happy mining!"
  },
  
  {
    "title": "GPU (Nvidia) Mining Guide",
    "url": "/posts/maxcoin-miners-nvidia/",
    "categories": "Miners, Guides",
    "tags": "Maxcoin, Miners, Guides, GPUs",
    "date": "2021-12-04 16:35:00 -0500",
    





    "snippet": "by: https://twitter.com/graphics4crypto and https://twitter.com/mxjmpbeanGetting Started:  Download and unzip ccminer 8.19  Open ccminer folder then create a text document ( Right click-&amp;gt; New-&amp;gt; Text Document).  New Text Document -&amp;gt; Right click–&amp;gt; Rename-&amp;gt; MAXcoin-.conf  then (RightClick -&amp;gt;  Edit) copy &amp;amp; paste, where  is the name of the pool you wish to connect {“algo” : “keccak”,“url” : “stratum+tcp://pool_address:port”,“user” : “username.workername”,“pass” : “worker_password”}  Replace username.workername and worker password from your pool account.  Replace from “url” : stratum+tcp://pool:port with the pool address you with to use.  Save and close the file.  Duplicate this file for other pools editing your username.workername and worker password.To launch the miner, use the syntax:  ccminer -c MAXcoin-.confWith thecoin.pw:  You need to create an account and create a worker within your account.  Address: thecoin.pw  Port: 4100  Replace the username and worker from your created account.  Example of thecoin.pw config file:{“algo” : “keccak”,“url” : “stratum+tcp://thecoin.pw:4100”,“user” : “username.workername”,“pass” : “worker_password”}With Crypto Hub:  You need to create an account to access the pool.  Address: cryptohub.online  Port: 5000  Replace the username with the email that you used to register. If you wish to specify a worker name, place the worker name after the email, starting with :  Example of Crypto Hub config file:{“algo” : “keccak”,“url” : “stratum+tcp://cryptohub.online:5000”,“user” : “user@email.com:worker_name”,“pass” : “x”}```sh## With zpool:- Zpool pays in BTC, so you need to pass your BTC address as username.- Address: keccak.mine.zpool.ca- Port: 5133- Example of zpool config file:```sh{“algo” : “keccak”,“url” : “stratum+tcp://keccak.mine.zpool.ca:5133”,“user” : “18QDfuLJnEyHbCvioD39CkuhKZzMUDrRFS”,“pass” : “x”}With MiningPoolHub:  You need to create an account and create a worker within your account.  Address: hub.miningpoolhub.com  Port: 20461  Replace the username and worker from your created account.  Example of MiningPoolHub config file:{“algo” : “keccak”,“url” : “stratum+tcp://hub.miningpoolhub.com:20461”,“user” : “username.workername”,“pass” : “worker_password”}  Happy mining!"
  },
  
  {
    "title": "Maxcoin Mining Software",
    "url": "/posts/maxcoin-miners-software/",
    "categories": "Miners, Software",
    "tags": "Maxcoin, Miners, Software",
    "date": "2021-12-04 13:25:00 -0500",
    





    "snippet": "Software:  CgMiner  CCMiner  MacMiner  SGMiner #1  SGMiner #2  Dual ETH/MAX"
  },
  
  {
    "title": "Maxcoin Mining Pools",
    "url": "/posts/maxcoin-miners-pools/",
    "categories": "Miners, Pools",
    "tags": "Maxcoin, Miners, Pools",
    "date": "2021-12-04 13:25:00 -0500",
    





    "snippet": "Pools:  Atom Miner  Mineblocks  zPool  a Hash Pool  Nice Hash  Mining-Dutch  Zer Pool  NL Pool  Mining Pool Hub  Blaze Pool"
  },
  
  {
    "title": "Maxcoin Mining Hardware",
    "url": "/posts/maxcoin-miners-hardware/",
    "categories": "Miners, Hardware",
    "tags": "Maxcoin, Hardware",
    "date": "2021-12-04 13:25:00 -0500",
    





    "snippet": "Hardware:  AtomMiner.com"
  },
  
  {
    "title": "Maxcoin ElectrumX (Light Wallets)",
    "url": "/posts/maxcoin-electrumx/",
    "categories": "Developers, Projects",
    "tags": "Developers, Wallets, Electrum",
    "date": "2021-11-25 06:40:00 -0500",
    





    "snippet": "InstallFirst you need to have the python base system requirements$ sudo apt-get update$ sudo apt-get install build-essential python3 python3-dev python3-setuptools python3-pip virtualenv python3-multidict  python3-pytest libleveldb-devset the virtual enviroment$ virtualenv -p python3 myenv$ source myenv/bin/activateYou can install electrumx after that. For testing, it is not necessarily needed, but that way you can see if all would work well or if there is something missing.git clone https://github.com/spesmilo/electrumxcd electrumxsudo python3 setup.py installMaxcoin InfoMaxcoin Ports            P2P / Testnet      8668 / 18668              RPC / Testnet      8669 / 18669      Genesis0x0000002d0f86558a6e737a3a351043ee73906fe077692dfaa3c9328aaca21964FeaturesShape-shifting software defends against botnet hacksAlgosSchnorr / secp256r1coins.pyFirst we need some info from maxcoin that is in the Maxcoin Info section, plus the following:curl --user maxcoinrpc --data-binary &#39;{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;: &quot;curltest&quot;, &quot;method&quot;: &quot;gettxoutsetinfo&quot;, &quot;params&quot;: []}&#39; -H &#39;content-type text/plain;&#39; http://127.0.0.1:8080Output by the syncing time:{  &quot;height&quot;: 4105438,  &quot;bestblock&quot;: &quot;000000000000d98cff8824ce362c934bd97de404621ef854a32a68e2f345e780&quot;,  &quot;transactions&quot;: 887407,  &quot;txouts&quot;: 2136713,  &quot;bytes_serialized&quot;: 88311691,  &quot;hash_serialized&quot;: &quot;2d8d1d8acc008e2b6da524f21e0e9b2b1a10f5a8d25b7b9f62f86f9d0b7b6a31&quot;,  &quot;total_amount&quot;: 75582558}TX_COUNT is the value “transactions”, TX_COUNT_HEIGHT is “height” and TX_PER_BLOCK is the result of TX_COUNT/TX_COUNT_HEIGHT. The values don’t have to match 100%, so for example use 2 for TX_PER_BLOCK even if the result is &amp;lt; 2.887407/4105438.00.21615403764470442This is similar on how to add Maxcoin into the coinsclass Maxcoin(Coin):    NAME = &quot;Maxcoin&quot;    SHORTNAME = &quot;MAX&quot;    NET = &quot;mainnet&quot;    P2PKH_VERBYTE = bytes.fromhex(&quot;6E&quot;)    P2SH_VERBYTES = [bytes.fromhex(&quot;70&quot;)]    WIF_BYTE = bytes.fromhex(&quot;80&quot;)    GENESIS_HASH = (&#39;0000002d0f86558a6e737a3a351043ee73906fe077692dfaa3c9328aaca21964&#39;)    DESERIALIZER = lib_tx.DeserializerSmartCash    ENCODE_CHECK = partial(Base58.encode_check, hash_fn=lib_tx.DeserializerSmartCash.keccak)    DECODE_CHECK = partial(Base58.decode_check,hash_fn=lib_tx.DeserializerSmartCash.keccak)    HEADER_HASH = lib_tx.DeserializerSmartCash.keccak    TX_COUNT = 869998    TX_COUNT_HEIGHT = 3982932    TX_PER_BLOCK = 1 # actually 0.21843154741281046    RPC_PORT = 8669         @classmethod    def header_hash(cls, header):        &#39;&#39;&#39;Given a header return the hash.&#39;&#39;&#39;        return cls.HEADER_HASH(header)  Note: VERIFY THAT THE DESERIALIZER ALSO WORKS FOR MAXCOIN:This might be useful to search and compare with the smart cashMaxcoin Test Block in ElectrumX  code section that generates it  {  &quot;hash&quot;: &quot;000000000000bc8fff5727a0d9e59632b07b21f72bce7950a928175e82fbd2d0&quot;,  &quot;size&quot;: 185,  &quot;height&quot;: 100000,  &quot;merkleroot&quot;: &quot;823f4b30b806e57a07144148d8f586264780bfc33f3632da8648b20ac9d2f014&quot;,  &quot;tx&quot;: [    &quot;823f4b30b806e57a07144148d8f586264780bfc33f3632da8648b20ac9d2f014&quot;,  ],  &quot;time&quot;: 1394729531,  &quot;nonce&quot;: 3303860448,  &quot;bits&quot;: &quot;1b019144&quot;,  &quot;previousblockhash&quot;: &quot;000000000000e84e3b6d60da9fc745eba5626a53fc79329c3fea8dd3a146287b&quot;,  &quot;block&quot;: &quot;01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff1303a08601065321e23b1a8b4901000112000000ffffffff010060343c020000001976a91430be99cd8e08ea2472e1dd47fae0928f71f0724688ac00000000&quot;}  If the rpc is running in the main net you can also test the output from block 10000 by using the following command:curl --user maxcoinrpc --data-binary &#39;{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;: &quot;curltest&quot;, &quot;method&quot;: &quot;getblock&quot;, &quot;params&quot;: [&quot;000000000000bc8fff5727a0d9e59632b07b21f72bce7950a928175e82fbd2d0&quot;]}&#39; -H &#39;content-type: text/plain;&#39; http://127.0.0.1:8080Where the output might look like this:{  &quot;hash&quot;: &quot;000000000000bc8fff5727a0d9e59632b07b21f72bce7950a928175e82fbd2d0&quot;,  &quot;confirmations&quot;: 273264,  &quot;size&quot;: 185,  &quot;height&quot;: 100000,  &quot;version&quot;: 2,  &quot;merkleroot&quot;: &quot;823f4b30b806e57a07144148d8f586264780bfc33f3632da8648b20ac9d2f014&quot;,  &quot;tx&quot;: [    &quot;823f4b30b806e57a07144148d8f586264780bfc33f3632da8648b20ac9d2f014&quot;  ],  &quot;time&quot;: 1394729531,  &quot;nonce&quot;: 3303860448,  &quot;bits&quot;: &quot;1b019144&quot;,  &quot;difficulty&quot;: 41810.1101982,  &quot;previousblockhash&quot;: &quot;000000000000e84e3b6d60da9fc745eba5626a53fc79329c3fea8dd3a146287b&quot;,  &quot;nextblockhash&quot;: &quot;0000000000014db84e52aa3aa03064bc096044bb37c7191fab91fe7d61604701&quot;}ToDoSearch for electrum implementations of 365coin, Slothcoin or Cryptometh that are Keccak SHA-3 BasedToDo: Check with Oliver how does the “Block” section in the example code works.https://github.com/Max-Coin/maxcoin/blob/master/src/base58.h#L275Sources      https://github.com/spesmilo/electrumx        https://gist.githubusercontent.com/cipig/af7ff886ca92746c3cac55e90cfcdddd/raw/9e8e1860cd31763e822607648d2d447810dfb4dc/electrumx_addcoin.md        https://github.com/SmartCash/electrum-smart-server/commit/cc4b3e0b4076f2482683fd244ba048415eaa5b90  "
  },
  
  {
    "title": "Maxcoin integration into Thorchain",
    "url": "/posts/maxcoin-into-torchain/",
    "categories": "Research, Resources",
    "tags": "Developers, Thorchain, Resources, Research",
    "date": "2021-11-21 05:30:00 -0500",
    





    "snippet": "The propose of this document is to setup a methodology  to get maxcoin blockchain linked and functional to Thorchain.It is also important to note that since our philosophy is to be as decentralized as possible, we want to satisfy this by working with as many multiple true decentralized solutions as we can, which might include crosschain, 2nd Layers, DEXs, DEFIs and others.Overview  1-way State Pegs allow syncing state from external chains  A State Machine to coordinate asset exchange logic and delegate redemptions  Bifröst Chain Client to convert redemptions into chain-specific transactions  A TSS protocol to enable distributed threshold key-signing1Requirements to operate on ThorChain  Maxcoin wallet that integrates with Kubernetes and terraform  Create bifrost that works with Maxcoin  Have a testnet to also test it with the thorchain testnet  (optional) Provide Liquidity in Maxcoin(us) and Rune(us and miners)  (optional) Updates to wallets and some security audits by ourselfs en regards updates, maybe decentralize furtherMaxcoin wallet that integrates with Kubernetes and terraform  We need and easy way to create the wallet of maxcoin (Kubernetes Image)-p1r0THORNodes service the THORChain network, of which there is intended to be initially 99. Each THORNode is comprised of several independent servers in a cluster. All THORNodes communicate and operate in cooperation to create a cross-chain swapping network.[2]To set up a node, you have three choices:  Set up manually (not recommended unless you are an expert)  Set up via Kubernetes (recommended)  Set up via Provider (coming soon)THORNode StackEach THORNode is comprised of 5 major components.2  thornode  - this is a daemon that runs the THORChain chain itself and a HTTP server, that gives a RESTful API to the chain.  bifrost  - this daemon creates connections to remote chains (like Bitcoin, Ethereum, Binance, etc) to both observe activity on those chains (incoming/outgoing transactions), and also sign/broadcast outgoing transactions (moving funds on remote chains).  gateway : THORNode gateway proxy to get a single IP address for multiple deployments  midgard  - this daemon is a layer 2 REST API that provides front-end consumers with semi real-time rolled up data and analytics of the THORChain network. Most requests to the network will come through Midgard. This daemon is here to keep the chain itself from fielding large quantities of requests. You can think of it as a “read-only slave” to the chain. This keeps the resources of the network focused on processing transactions.  Full nodes - for every chain that is supported by the network, each THORNode operator will run their own full node of each chain (Bitcoin, Ethereum, Binance, etc).TerraformTerraform is an open-source infrastructure as code software tool that provides a consistent CLI workflow to manage hundreds of cloud services. Terraform codifies cloud APIs into declarative configuration files. Follow up the instalationCreate bifrost that works with Maxcoin  We need to create our own bitfrost for maxcoin -p1r0How THORChain worksThe Bifröst Protocol: 1-way State Pegs Each node has a “Bifröst” service that deals with the nuances of connecting to each chain. Once nodes are synced, they watch vault addresses. If they ever see an inbound transaction, they read it and convert it into a THORChain witness transaction.The witness transaction has the following parameters that are essentially the same for each chain, no matter the type:type Tx struct {  ID          TxID    `json:&quot;id&quot;`2  Chain       Chain   `json:&quot;chain&quot;`3  FromAddress Address `json:&quot;from_address&quot;`4  ToAddress   Address `json:&quot;to_address&quot;`5  Coins       Coins   `json:&quot;coins&quot;`6  Gas         Gas     `json:&quot;gas&quot;`7  Memo        string  `json:&quot;memo&quot;`8}THORChain processes each observed transaction and collects  signers  - essentially the keys of each node that reports a transaction that is 100% identical. Once a super-majority of nodes agree on a particular transaction, it moves from a  pending  state to a finalised state.1type ObservedTx struct {1  Tx             common.Tx        `json:&quot;tx&quot;`2  Status         status           `json:&quot;status&quot;`3  OutHashes      common.TxIDs     `json:&quot;out_hashes&quot;` 4  BlockHeight    int64            `json:&quot;block_height&quot;`5  Signers        []sdk.AccAddress `json:&quot;signers&quot;` 6  ObservedPubKey common.PubKey    `json:&quot;observed_pub_key&quot;`7}bifrost repoHave a testnet to also test it with the thorchain testnet  We might require a testnet to use also with the torchain testnet -p1r0THORChainConnecting to THORChainHow to connect to Midgard, THORNode and the base Tendermint layer.The active node IP addresses can be queried from this endpoint:https://testnet.seed.thorchain.info 3The Network Information comes from three sources:  MIDGARD: Consumer information relating to swaps, pools, volume. DeFi dashboards, Wallets, Exchanges will primarily interact with Midgard.  THORNODE: Raw blockchain data relating to the THORChain state machine. THORChain block explorers will query THORChain-specific information here.  TENDERMINT: Tendermint standard data, used by all block explorers to query for base information.Provide Liquidity in Maxcoin(us) and Rune(us and miners) (optional)Based on roles the offical page says the followingThere are four key roles in the system4:  Liquidity providers who add liquidity to pools and earn fees and rewards  Swappers who use the liquidity to swap assets ad-hoc, paying fees  Traders who monitor pools and rebalance continually, paying fees but with the intent to earn a profit.  Node Operators who provide a bond and are paid to secure the system  Even if the liquidity providers are set as people that might want to earn fees and rewards, we might require to set an initial liquidity provided to setup at least a base price to start. Roles -p1r0Updates to wallets and some security audits by ourselfs en regards updates, maybe decentralize further (optional)We might need to do updates to wallets and some security audits by ourselfs en regards updates, maybe decentralize further  We might consider rebuild another genesis block and update this lines at the code, plus adding also the dnsseed and/or some nodes -p1r0Contact.Developers  David Serrano  p1r0References            https://docs.thorchain.org/technology 2021-10-27 &amp;#8617; &amp;#8617;2              https://docs.thorchain.org/thornodes/overview 2021-10-27 &amp;#8617;              https://www.terraform.io/docs/cli/install/apt.html 2021-10-28 &amp;#8617;              https://docs.thorchain.org/developers/connecting-to-thorchain 2021-10-28 &amp;#8617;      "
  },
  
  {
    "title": "Maxcoin Scalability Resources",
    "url": "/posts/maxcoin-scalability-resources/",
    "categories": "Research, Resources",
    "tags": "Developers, scalability, Resources, Research",
    "date": "2021-11-21 04:35:00 -0500",
    





    "snippet": "SCALABILITY TRILEMMAThe Scalability Trilemma, a term coined by Vitalik Buterin (founder of Ethereum), refers to the tradeoffs that crypto projects must make when deciding how to optimize the underlying architecture of their own blockchain. The better question to ask is, which aspects of the blockchain does the project intend to optimize, and are these in line with its value proposition and use-case.[1]The Trilemma claims that blockchain systems can only at most have two of the three properties[2]Most blockchains currently lack the transaction performance required for global commercial use. Scaling this performance for global use is a huge challenge for developers. The trilemma itself refers to decentralization, security, and scalability - there is a degree of compromise for each whenever trying to improve one particular aspect.[3]DECENTRALIZATIONDecentralization, as the word suggests, refers to the degree of diversification in ownership, influence and value in the blockchain. The important concept here is that it is the “degree of decentralization” — it is not a binary attribute. Ethereum is very decentralized; Eos is partially decentralized; Twitter is not at all decentralized. A common misconception is that networks can simply be labeled decentralized or not. Another one is that all blockchains are decentralized to the same degree. [1]Decentralization (defined as the system being able to run in a scenario where each participant only has access to O( c ) resources, i.e. a regular laptop or small VPS)[2]Decentralization: Decentralization, as the word suggests, refers to the degree of diversification in ownership, influence and value in the blockchain.[3]Here are the pros and cons of decentralized protocols:Benefits  Decentralization, at a philosophical level, aims to bring power back to the community. By using a blockchain, where the rules of governance are literally codified and cannot be edited, one can maximize distribution of influence, wealth and ownership across the community.  The more decentralized a system, the more secure (typically). There is no central point of failure or hack. There are, however, certain ways to hack even the most decentralized systems.Costs  Decentralized protocols like Bitcoin or Ethereum often use PoW mining to produce new blocks. This form of mining requires validators to solve difficult hash puzzles. As a result, this not only uses vast amounts of energy, but also compromises on performance and speed. This can be problematic for use-cases that require high throughput.  The downside to leaving disputes up to the community, is that there is no central moderator. For certain use-cases, like Social Media, this would enable the publication of hate speech or fake news, for example.  It is hard to shut down a decentralized blockchain, as there is no centralized server or party. While also stated as one of the core benefits, in a scenario where a destructive use-case were to arise, this would cause a problem that would be hard to resolve, apart from by the community itself.[1]SECURITYSecurity refers to the level of defensibility a blockchain has against attacks from external sources. Internally, or within the blockchain itself, it’s a measure of how immutable the system is to change.[1]Security (defined as being secure against attackers with up to O(n) resources) [2]Security: Security refers to the level of defensibility a blockchain has against attacks from external sources.[3]  50% &amp;gt; Attack — an entity (or set of entities) that owns more than 50% of the total tokens outstanding, effectively owns the network  Sybil Attack — an entity (or set of entities) could forge multiple (hundreds, thousands or more) identities on a system in order to effectively control a significant stake in ownership and/or decision making of the network  Penny spend Attack — an entity (or set of entities) that flood the network with low-value transactions in order to stop the network from running  Distributed Denial of Service Attack (DDoS) — occurs when there is intent to disrupt traffic in a network by flooding the network with malicious transactions  Collusion Attack — one or more entities (or nodes) decide to collude together to perform some malicious operation(s) on the networkBenefits	The primary benefit of robust security is that the blockchain is less vulnerable to attack. This is ideal for applications that require sovereign grade security and deal with confidential data. Anything in the realm of financial services would likely require the highest degree of security. Even crypto exchanges — one of the biggest targets of hackers — would be far better suited to deal with such attacks if built on a blockchain. (Indeed, we discuss the prospect of a new set of dApps — decentralized crypto exchanges — as one of the more promising ideas for future dApps on Eos).Costs	There are no downsides to maintaining robust security, but in order to do so there are a few second-order effects that are concerning. Many secure blockchain networks utilize PoW protocols — these require complex hash puzzles to be solved prior to block production — but more importantly, these protocols use up an immense amount of computing power and energy. Consequently, this reduces throughput and increases network latency, a strong deterrent for many potential users, that are used to near-instantaneous transaction times on centralized networks. This is still a worthwhile tradeoff for platforms that put a premium on security, but for ones that attempt to optimize user experience, this is certainly a strong consideration.SCALABILITYThe degree of scalability is important because it dictates the eventual capacity of any network. Put another way, it determines the upper limit on how large a network can grow. It is perhaps the most important question to think about when evaluating a network — how many users can this network sustain? Bitcoin currently has between 2.9 to 5.8 million wallet holders; scalability and decentralization can co-exist, but security risks become greater. Developers will choose the platform that best suits their needs, and users will choose the platforms that function best, according to them. Some users may be willing to sacrifice security for scalability; others, scalability for security. [1]Scalability (defined as being able to process O(n) &amp;gt; O(c) transactions)[2]Scalability: The scalability problem is the limited rate at which a blockchain network can process transactions. [3]Benefits  Scalability ensures that the application runs quickly and that it can support a high volume of transactions. As we mentioned, this is especially useful for audio/video streaming sites, gaming, and social media.  The application is less likely to break down if user demand is greater than originally planned (Cryptokitties, for example, which was run on Ethereum, was not very scalable and ran into major issues because of this.CostsThe costs to achieving infinite scalability primarily regard security. Almost all of the above security risks become greater with a network of massive scale. In addition, quickly growing networks will require a fast consensus mechanism, in order to validate more transactions while delivering the same speed to individual users. This can only occur in Proof of Stake or Delegated Proof of Stake. This compromises decentralization. If the protocol is Proof of Work, the hash puzzles or mining algorithms would need to be easier in order to have a commensurately fast validation process. This compromises security, and also decentralization to an extent (mining pools would thrive if hash puzzles were made easier).[1]SCALING TYPESLayer 1 solutionsSegregated Witness (Segwit)Segwit is a protocol upgrade for Bitcoin that changes the way and structure of how data is stored. By removing the signature data for each transaction, it frees up more space and capacity for more transactions to be stored in Bitcoin’s 1MB-capacity blocks. The signature data – the digital signature that verifies the ownership and availability of the sender’s funds – makes up almost 70% of the entire space of a transaction. Therefore, removing it would save tremendous space that allows more transactions to be included in the block. Segwit has already been implemented in Litecoin. [4]Segregated Witness or SEGWIT is also another notable addition among solutions to scalability of blockchain among first layer solutions. SEGWIT is basically a protocol improvement in the Bitcoin blockchain network, focused on modifying the manner and structure of data storage. It helps in the removal of signature data associated with each transaction, thereby opening up more capacity and space for storing transactions. It is important to note that the digital signature for verifying ownership and availability of the funds of the sender, takes around 70% of the whole space in a transaction. Removal of the digital signature could clear up more space for adding more transactions. [5]Sharding (might be better with PoS)Ethereum 1.0 can only process 7-15 transactions per second, the goal of sharding is to partition all network computational resources into shards, so that a node (a single computer as a peer connected to the network) doesn’t have to process (download, compute, store, read) every transaction in the history of the blockchain, in order to make a new transaction (write and upload) or otherwise participate in securing and using Ethereum; rather a node can just participate in a single shard, or more if it so chooses. Multiple shards are handled separately by different subsets of securing participants, aka securitors (which include notaries, proposers, miners and validators. The primary goal is a massive scalability improvement, potentially exponential in phase 6 of the roadmap; and probably at least a 100 fold increase in transactions per second with earlier phases. Quadratic sharding involves having shards at a depth of at most 1 from the main chain, that is, there are no shards within a shard, or a manager shard managing sub-shards; whereas exponential sharding has shards within shards, recursively.Each one of the shards (likely 100 live in phase 1) will have as high a capacity (and likely more with phase 1) than the current existing Ethereum chain. A smart contract will exist on the main chain, called the sharding manager contract, which manages how data and transactions in shards are accepted as valid by the main chain, via notaries voting on the validity and data availability of collations (collections of data and transactions, analogous to blocks, but where they occur more frequently than blocks) in shards, and proposers proposing blobs (analogous to transactions but without execution in phase 1) which are collected into collations.[6]Sharding is the future of Ethereum scalability, and it will be key to helping the ecosystem support many thousands of transactions per second and allowing large portions of the world to regularly use the platform at an affordable cost. However, it is also one of the more misunderstood concepts in the Ethereum ecosystem and in blockchain ecosystems more broadly. It refers to a very specific set of ideas with very specific properties, but it often gets conflated with techniques that have very different and often much weaker security properties. The purpose of this post will be to explain exactly what specific properties sharding provides, how it differs from other technologies that are not sharding, and what sacrifices a sharded system has to make to achieve these properties.[7]  Traditional blockchains - including Bitcoin, pre-PoS/sharding Ethereum, Litecoin, and other similar chains. These rely on every participant running a full node that verifies every transaction, and so they have decentralization and security, but not scalability.  High-TPS chains - including the DPoS family but also many others. These rely on a small number of nodes (often 10-100) maintaining consensus among themselves, with users having to trust a majority of these nodes. This is scalable and secure (using the definitions above), but it is not decentralized.  Multi-chain ecosystems - this refers to the general concept of “scaling out” by having different applications live on different chains and using cross-chain-communication protocols to talk between them. This is decentralized and scalable, but it is not secure, because an attacker need only get a consensus node majority in one of the many chains (so often &amp;lt;1% of the whole ecosystem) to break that chain and possibly cause ripple effects that cause great damage to applications in other chains.  Sharding is a technique that gets you all three. A sharded blockchain is:  Scalable: it can process far more transactions than a single node  Decentralized: it can survive entirely on consumer laptops, with no dependency on “supernodes” whatsoever      Secure: an attacker can’t target a small part of the system with a small amount of resources; they can only try to dominate and attack the whole thing    Scalable verification of computation  We can break up the 51%-attack-proof scalable validation problem into two cases:          Validating computation: checking that some computation was done correctly, assuming you have possession of all the inputs to the computation      Validating data availability: checking that the inputs to the computation themselves are stored in some form where you can download them if you really need to; this checking should be performed without actually downloading the entire inputs themselves (because the data could be too large to download for every block)        Validating a block in a blockchain involves both computation and data availability checking: you need to be convinced that the transactions in the block are valid and that the new state root hash claimed in the block is the correct result of executing those transactions, but you also need to be convinced that enough data from the block was actually published so that users who download that data can compute the state and continue processing the blockchain. This second part is a very subtle but important concept called the data availability problem; more on this later.  Scalably validating computation is relatively easy; there are two families of techniques: fraud proofs and ZK-SNARKs.[7]Dynamic block size (Might Require RandomX or Cryptonote)In the height of the 2017 cryptocurrency boom, Bitcoin was flooded with transactions, and the fees skyrocketed for those that wanted to be included in the next block, or any near-future block for that matter. Those who were unwilling to pay high fees saw their transactions pushed back for hours, days, or even drop out of the queue altogether.This was a harrowing insight into how Bitcoin would fare if the oft talked about ‘mass adoption’ were to occur. If Bitcoin was to be used by the masses, things would be even worse than in 2017, and Bitcoin would be inaccessible to anyone but the wealthy, simply because the throughput is small due to a fixed block size, causing the fee market to take over.Monero foresaw this and wanted to do something different. So the Monero developers implemented a dynamic blocksize.Basically, Monero also has a block size cap, but it’s a soft cap. When the line of waiting transactions gets too long, the miners can increase the size of the blocks. With our train analogy, you can imagine adding more train cars to fit the extra passengers. After the queue is empty the blocks shrink back to their original size going forward.If this seems like a neat idea, it seems reasonable to ask why Monero is the only cryptocurrency that has implemented this. Why not add it on Bitcoin so as to put a stop to the throughput issues?Unfortunately, this is not possible. There are several reasons why, and we’ll do our best to explain.It’s always in a miner’s best interest to have large blocks. With large blocks they can fit in more transactions, and make more money off of the fees, as well as the block rewards. This has the potential to lead to spam attacks, where someone sends many small transactions, with small fees, to bloat the chain. Miner’s would just raise the block size include them all because money is money, no matter how small. This would lead to consistently large blocks with little economic benefit. Bitcoin solves this by artificially restricting the block size, thereby generating a fee market. Spam attackers would have to outpay the other users in fees, and it is no longer cheap. But this means blocks get full leaving some transactions waiting as mentioned above.So how can Monero have dynamic blocksizes but avoid spam attacks? The answer is simple, but clever. A penalty on the block reward is introduced when a block is bigger than normal. If a miner wants to increase the blocksize, the reward they get from finding that block will be less than they would otherwise receive. So they will only increase the blocksize when the paid transaction fees of the users outweigh the lost portion of the block reward. For example, if the miner would lose 0.5 XMR by raising the block reward, and the sum of the paid transaction fees would be 0.4 XMR, then there would be a net loss of 0.1 XMR if they were to raise the size, so they wouldn’t do it. Conversely, if the total transaction fees added up to 0.7 XMR, then there would be a net gain of 0.2 XMR, even though they lose the 0.5 XMR from the block reward penalty, so the miner will increase the size.These dynamic blocks, allow the network to grow organically, without aritifically restricting the blocksize to make a forced fee market, while still avoiding spam attacks. There are several more angles we can view this idea from, and more reasons why it wouldn’t be possible to add to Bitcoin, but for now, we hope that the reader has an understanding of how Monero sidesteps several of the problems in Bitcoin and its derivatives, and how it plans to scale its throughput into the future.[8]The block size of Monero coin cryptocurrency is elastic which is based upon the median of the sizes of the preceding n number of blocks. The maximum size of any of the blocks is twice of the ongoing medium size. Hence the miners repeat 4 times incrementing penalization from the reward of the block for making the block bigger than the ongoing median which is prevalent in the Monero blockchain. The minimum of the medians of the block sizing is currently set to 20 kilobytes. What it means is that without the need of dynamic block sizing to start any of the blocks which is present within the Monero blockchain can be made to expand up to the maximum of 20 kilobytes without leaving any of the penalty over the individual who is mining Monero coin.However, there is a proposal in the pipeline which suggests that the block size of the Monero coin cryptocurrency should be incremented to the memory size of 40 kilobytes which shall help to retain the optimum time-barring of the starting capacity of the block at the same hashing rate. Another proposal was put in which proposed to increment the block size of Monero blockchain to 60 kilobytes because it was observed that a larger amount of mixing of the sizes shall be manufactured which shall result in the more breakages in the transactions and slip transactions which shall be solely inconvenient for the people who are trading in Monero and who are accepting payments in Monero coin cryptocurrency. It was also and envisioned that ultimately it shall be difficult for the merchants to adopt this method as a major fraction of the people who are very positive about the Monero coin cryptocurrency have only got a single method of payment installed.Therefore they shall be required to manually process the transactions which may arise due to the split payments. The optimum size of 60 kilobytes, therefore, was observed as to be allowing most of the routine payments getting easily handled without the risk of getting split. Therefore, the size of 60 kilobytes is thought to be great for the overall long-term adoption of the Monero coin cryptocurrency. [9]  Todo: Decentralization that DPoS and RandomX can provide?Layer 2 solutionsBASED ON APPLICATION TYPES      Application specific (payment channels): lightning or plasma for example.        Arbitrary contracts executions ( zkrollups, optimisticrollups (easier implementations of smart contracts with OVM a EVM version, yet slower thank ZkSnarks))  BASED ON SCALABILITY VALIDATING COMPUTATION TYPESScalably validating computation is relatively easy; there are two families of techniques: fraud proofs and ZK-SNARKs.[7]      Fraud proofs are a system where to accept the result of a computation, you require someone with a staked deposit to sign a message of the form “I certify that if you make computation C with input X, you get output Y”. You trust these messages by default, but you leave open the opportunity for someone else with a staked deposit to make a challenge (a signed message saying “I disagree, the output is Z”). Only when there is a challenge, all nodes run the computation. Whichever of the two parties was wrong loses their deposit, and all computations that depend on the result of that computation are recomputed.[7]        ZK-SNARKs are a form of cryptographic proof that directly proves the claim “performing computation C on input X gives output Y”. The proof is cryptographically “sound”: if C(x) does not equal Y, it’s computationally infeasible to make a valid proof. The proof is also quick to verify, even if running C itself takes a huge amount of time.[7]  Computation based on fraud proofs is scalable because “in the normal case” you replace running a complex computation with verifying a single signature. There is the exceptional case, where you do have to verify the computation on-chain because there is a challenge, but the exceptional case is very rare because triggering it is very expensive (either the original claimer or the challenger loses a large deposit). ZK-SNARKs are conceptually simpler - they just replace a computation with a much cheaper proof verification - but the math behind how they work is considerably more complex.There is a class of semi-scalable system which only scalably verifies computation, while still requiring every node to verify all the data. This can be made quite effective by using a set of compression tricks to replace most data with computation. This is the realm of rollups.[7]State channels/atomicswaps (Applications specific) vs plasma/lightning(Applications specific) vs rollupsThe three major types of layer-2 scaling are state channels, Plasma and rollups. They are three different paradigms, with different strengths and weaknesses, and at this point we are fairly confident that all layer-2 scaling falls into roughly these three categories (though naming controversies exist at the edges, eg. see “validium”).How do channels work?Imagine that Alice is offering an internet connection to Bob, in exchange for Bob paying her $0.001 per megabyte. Instead of making a transaction for each payment, Alice and Bob use the following layer-2 scheme.First, Bob puts $1 (or some ETH or stablecoin equivalent) into a smart contract. To make his first payment to Alice, Bob signs a “ticket” (an off-chain message), that simply says “$0.001”, and sends it to Alice. To make his second payment, Bob would sign another ticket that says “$0.002”, and send it to Alice. And so on and so forth for as many payments as needed. When Alice and Bob are done transacting, Alice can publish the highest-value ticket to chain, wrapped in another signature from herself. The smart contract verifies Alice and Bob’s signatures, pays Alice the amount on Bob’s ticket and returns the rest to Bob. If Alice is unwilling to close the channel (due to malice or technical failure), Bob can initiate a withdrawal period (eg. 7 days); if Alice does not provide a ticket within that time, then Bob gets all his money back.This technique is powerful: it can be adjusted to handle bidirectional payments, smart contract relationships (eg. Alice and Bob making a financial contract inside the channel), and composition (if Alice and Bob have an open channel and so do Bob and Charlie, Alice can trustlessly interact with Charlie). But there are limits to what channels can do. Channels cannot be used to send funds off-chain to people who are not yet participants. Channels cannot be used to represent objects that do not have a clear logical owner (eg. Uniswap). And channels, especially if used to do things more complex than simple recurring payments, require a large amount of capital to be locked up.How does plasma work?To deposit an asset, a user sends it to the smart contract managing the Plasma chain. The Plasma chain assigns that asset a new unique ID (eg. 537). Each Plasma chain has an operator (this could be a centralized actor, or a multisig, or something more complex like PoS or DPoS). Every interval (this could be 15 seconds, or an hour, or anything in between), the operator generates a “batch” consisting of all of the Plasma transactions they have received off-chain. They generate a Merkle tree, where at each index X in the tree, there is a transaction transferring asset ID X if such a transaction exists, and otherwise that leaf is zero. They publish the Merkle root of this tree to chain. They also send the Merkle branch of each index X to the current owner of that asset. To withdraw an asset, a user publishes the Merkle branch of the most recent transaction sending the asset to them. The contract starts a challenge period, during which anyone can try to use other Merkle branches to invalidate the exit by proving that either (i) the sender did not own the asset at the time they sent it, or (ii) they sent the asset to someone else at some later point in time. If no one proves that the exit is fraudulent for (eg.) 7 days, the user can withdraw the asset.Plasma provides stronger properties than channels: you can send assets to participants who were never part of the system, and the capital requirements are much lower. But it comes at a cost: channels require no data whatsoever to go on chain during “normal operation”, but Plasma requires each chain to publish one hash at regular intervals. Additionally, Plasma transfers are not instant: you have to wait for the interval to end and for the block to be published.Additionally, Plasma and channels share a key weakness in common: the game theory behind why they are secure relies on the idea that each object controlled by both systems has some logical “owner”. If that owner does not care about their asset, then an “invalid” outcome involving that asset may result. This is okay for many applications, but it is a deal breaker for many others (eg. Uniswap). Even systems where the state of an object can be changed without the owner’s consent (eg. account-based systems, where you can increase someone’s balance without their consent) do not work well with Plasma. This all means that a large amount of “application-specific reasoning” is required in any realistic plasma or channels deployment, and it is not possible to make a plasma or channel system that just simulates the full ethereum environment (or “the EVM”). To get around this problem, we get to… rollups.RollupsPlasma and channels are “full” layer 2 schemes, in that they try to move both data and computation off-chain. However, fundamental game theory issues around data availability means that it is impossible to safely do this for all applications. Plasma and channels get around this by relying on an explicit notion of owners, but this prevents them from being fully general. Rollups, on the other hand, are a “hybrid” layer 2 scheme. Rollups move computation (and state storage) off-chain, but keep some data per transaction on-chain. To improve efficiency, they use a whole host of fancy compression tricks to replace data with computation wherever possible. The result is a system where scalability is still limited by the data bandwidth of the underlying blockchain, but at a very favorable ratio: whereas an Ethereum base-layer ERC20 token transfer costs ~45000 gas, an ERC20 token transfer in a rollup takes up 16 bytes of on-chain space and costs under 300 gas.[7]The fact that data is on-chain is key (note: putting data “on IPFS” does not work, because IPFS does not provide consensus on whether or not any given piece of data is available; the data must go on a blockchain). Putting data on-chain and having consensus on that fact allows anyone to locally process all the operations in the rollup if they wish to, allowing them to detect fraud, initiate withdrawals, or personally start producing transaction batches. The lack of data availability issues means that a malicious or offline operator can do even less harm (eg. they cannot cause a 1 week delay), opening up a much larger design space for who has the right to publish batches and making rollups vastly easier to reason about. And most importantly, the lack of data availability issues means that there is no longer any need to map assets to owners, leading to the key reason why the Ethereum community is so much more excited about rollups than previous forms of layer 2 scaling: rollups are fully general-purpose, and one can even run an EVM inside a rollup, allowing existing Ethereum applications to migrate to rollups with almost no need to write any new code.[7]In ResumeApplication Specific solutions like PaymentChannels, Lightning/Plasma and atomic swaps might be useful for specific use cases in Maxcoin, for example; creating an atomic swap with other cryptocurrency and some Dexes that might use atomic swaps as a standar protocol for multichain operability. Another application might be also to develop an Ethereum/Polka/Cardano a DEFI model that might use some FraudProofs or ZKSnarks Model, but without the EVM. A last application is to create a ZKSnarks based model for a Mixer in order to provide Anonymity/Untraceability and thus Fungibility into the Maxcoin Currency.In regards of Rollups      Zkrollups:  ValidityProofs, Faster (Cryptography methods, based on Zero-Knowledge proofs), requires lots of science behind, to get implemented correctly specially for a EVM implementation. it might be easier for a Application specific function, some heavy computation required. zkSync, zkTube, LoopRing(Application Specific), StarkWare        OptimisticRollups: FraudProofs (requires colateral and actors, also handle by DAO), Slower, DEFI models to implement faster transactions, but might need to add some values to it, a heavy comunity required. Optimism, OMG and arbitrum    Todo, Search rollups and the verification methods for themCONCLUSIONS FOR MAXCOINIt’s important to say that the biggest blockchains with larger communities are working in both first and second layer solutions, this is smart since right now their highest limitation is scalability with the high demand they have.Its is good for our research propose that we visualize a future like this for maxcoin and based on other blockchain experiences we follow up with some of these implementations before the demand of maxcoin grows, regarding security it is also important that Maxcoin as a cryptography enhanced tech keeps this main base and  follow up with zkRollups as second layer solution, while maintaining the highest security possible in the layer 1.The main discussion regarding the Maxcoin philosophies/priorities, as a purely enhanced technology based on earlier types of cryptography can be the security, by on other hand joining the smart contract world might also require scalability.Finally, decentralization currently might be our weakest field, yet by keeping the current work on providing the tools and developing easier ways to distribute the maxcoin network,  bigger community might take care of this(still the demand of users is low and might not be a priority for now), plus looking forward on  1 layer solutions like changing the consensus mechanism that may also enhance the decentralization (PoS or RandomX), also there are some implementations for sharding that we might want to consider, but this might be only when the blockchain size reaches a huge size (still might be useful to have more nodes that have a full piece of the chain).References:[1] https://aakash-111.medium.com/the-scalability-trilemma-in-blockchain-75fb57f646df[2] https://medium.com/logos-network/everything-you-know-about-the-scalability-trilemma-is-probably-wrong-bc4f4b7a7ef[3] https://www.quora.com/What-is-the-blockchain-scalability-trilemma?share=1[4] https://masterthecrypto.com/blockchain-scalability-solutions-crypto-scaling-solutions/[5] https://101blockchains.com/blockchain-scalability-solutions/[6] https://eth.wiki/sharding/sharding-introduction-r-d-compendium[7] https://vitalik.ca/general/2021/04/07/sharding.html[8] https://localmonero.co/knowledge/dynamic-block-size[8] https://github.com/JollyMort/monero-research/blob/master/Monero%20Dynamic%20Block%20Size%20and%20Dynamic%20Minimum%20Fee/Monero%20Dynamic%20Block%20Size%20and%20Dynamic%20Minimum%20Fee%20-%20DRAFT.md[9] https://www.hashgains.com/wiki/m/what-is-monero-coin-block-sizeFurther interesing infoScalinghttps://www.youtube.com/watch?v=BgCgauWVTs0https://www.youtube.com/watch?v=7pWxCklcNsUZeroKnowledge Proofshttps://www.youtube.com/watch?v=HUs1bH85X9Ihttps://www.youtube.com/watch?v=OcmvMs4AMbM"
  },
  
  {
    "title": "Maxcoin DAO resources",
    "url": "/posts/dao-resources/",
    "categories": "Research, Resources",
    "tags": "DAO, Aragon, Governance, Resources, Research",
    "date": "2021-11-21 04:10:00 -0500",
    





    "snippet": "About DAOsDAOs are an effective and safe way to work with like-minded folks around the globe.Think of them like an internet-native business that’s collectively owned and managed by its members. They have built-in treasuries that no one has the authority to access without the approval of the group. Decisions are governed by proposals and voting to ensure everyone in the organisation has a voice.There’s no CEO who can authorise spending based on their own whims and no chance of a dodgy CFO manipulating the books. Everything is out in the open and the rules around spending are baked into the DAO via its code.[1]Starting an organisation with someone that involves funding and money requires a lot of trust in the people you’re working with. But it’s hard to trust someone you’ve only ever interacted with on the internet. With DAOs you don’t need to trust anyone else in the group, just the DAO’s code, which is 100% transparent and verifiable by anyone.This opens up so many new opportunities for global collaboration and coordination.[2]AutonomyDAOs are autonomous in the sense that they are immune to third parties’ actions. Thanks to the public blockchain networks they run on, DAOs control their own capital and allocate it according to self-enforcing, tamper-resistant rules. This is why TheDAO in 2016 was presented as “unstoppable”, meaning that nobody could change its behavior nor pull the plug of the computer it was running on.That’s what autonomy means here. The funds of a DAO are controlled by its code, and only by its code.[1]What have we learned?Using blockchain-based, autonomous code artifacts was quickly found to be problematic, and not only for DAOs. As individuals as well as organizations, we expect to have a recourse when something goes awry. If we make a mistake in bank transfer instructions, it is assumed that the bank will fix it and that our money will be returned. When two companies disagree over the execution of a contract, they might plead their cases before a court.Immutability and censorship resistance are valued by those who want to protect their assets and their independence from corrupt judges or failed states. The autonomy of the code is a way to set personal and collective arrangements out of reach of any third party, regardless of how powerful or wealthy they are. But it’s worth emphasizing here that the autonomy that we really crave is for the people (as individuals or as collectives), and that the autonomy of the code is a means rather than an end. Balancing code vs. communityOne way to approach such a combination is to make room for subjectivity in automated processes. Kleros and Aragon pioneered decentralized arbitration services that can be used today to make DAOs more flexible. Aragon Agreements, for instance, enable organizations to define human-readable agreements that can be enforced by a decentralized court of jurors when a dispute is raised.Another way to protect people from blind application of automated rules is to provide them with a way to escape a system before being harmed. This is the idea behind the ragequit mechanism offered by Moloch DAO: any investor in the DAO’s fund can withdraw their investment when they disagree with a decision voted by a majority of members.  Note: Do a DFO vs Courts vs ragequit mechanismThe focus has shifted from the absolute autonomy of the code praised by cypherpunks to the relative autonomy of a combination of dry code and human judgment.One way to approach such a combination is to make room for subjectivity in automated processes. Kleros and Aragon pioneered decentralized arbitration services that can be used today to make DAOs more flexible. Aragon Agreements, for instance, enable organizations to define human-readable agreements that can be enforced by a decentralized court of jurors when a dispute is raised.Lastly, we’re seeing mounting concern regarding legal risks for DAO members, which can be addressed by wrapping a DAO in a legal form such as an LLC. Several jurisdictions now offer such legal vehicles so that DAOs as well as their members are protected from legal uncertainties that may lead to unlimited personal liability. Examples include dOrg, a cooperative of developers that incorporated as a Vermont registered Blockchain-Based Limited Liability Company, and The LAO, a venture fund organized as a Delaware LLC.In each of these cases, the ideal of a pure cyberspace solely determined by code is balanced with the legitimate concern of protecting the people for whom such space has been built in the first place. Decentralized courts make it possible to protect communities from rogue individuals. Ragequitting prevents majorities from exerting excessive power upon minorities. Legal wrappers offer protection against threats to DAO members via regulations and applicable laws.DecentralizationDecentralization can be understood as the process of reducing or avoiding the concentration of power within organizations. In decentralized structures, resources and decision-making power cannot be seized by a small number of parties.Reality check: Put aside the decentralization razzle-dazzle, and have a look at real projects in the crypto space. All of them are under the control of their founders, and most of the significant ones are organized according to the traditional corporate governance system, with shareholders and accountable executives. Cooperative and meritocratic communities like dOrg, Metagame or LeapDAO are still an exception and have yet to prove themselves.More options to effectively decentralizeDecentralization is hard, but there have never been so many ideas to make it real! Here are some of the most interesting approaches we’ve seen recently.Token-based voting has been the main instrument for collective decision-making in DAOs since it’s the easiest way to prevent Sybil attacks, i.e., voting with multiple identities. Sybil attacks have always been a headache in the crypto space, which is essentially pseudonymous. People do not need to have their identity verified in order to participate in a public crypto-network such as Bitcoin or Ethereum, they just need a pair of cryptographic keys, and anyone can create an arbitrary number of keys at no cost. Token-based voting is an efficient way to be Sybil resistant since tokens are crypto-assets that cannot be created at will. However, token-based voting is also criticized because of its adverse effects on decentralization. As mentioned previously, most crypto-networks are imperfectly decentralized, precisely because a small number of addresses control a majority of the tokens.Conviction voting enables the preferences of a community to be continuously captured over time instead of organizing votes within a narrow time period, and to let stakeholders choose where they put their influence. It makes Sybill attacks and vote-buying harder, and it can also help to fight voter apathy. 1Hive has delivered an implementation of conviction voting, available as an Aragon app.[1]Conviction Voting offers a novel decision making process that funds proposals based on the aggregated preference of community members, expressed continuously. In other words, voters are always asserting their preference for which proposals they would like to see approved, rather than casting votes in a single time-boxed session. A member can change their preference at any time, but the longer they keep their preference for the same proposal, the “stronger” their conviction gets. This added conviction gives long standing community members with consistent preferences more influence than short term participants merely trying to influence a vote. Conviction Voting sidesteps sybil attacks, provides collusion resistance, and mitigates many of the attack vectors of time-boxed voting mechanisms.[2]Quadratic voting is also a way to limit the plutocratic effects of token-based voting, while still giving people with more skin in the game a way to signal their preferences. It has been successfully experimented with by Gitcoin for funding public goods.[1]Quadratic voting is a collective decision-making procedure which involves individuals allocating votes to express the degree of their preferences, rather than just the direction of their preferences.[1] By doing so, quadratic voting seeks to address issues of voting paradox and majority rule. Quadratic voting works by allowing users to “pay” for additional votes on a given matter to express their support for given issues more strongly, resulting in voting outcomes that are aligned with the highest willingness to pay outcome, rather than just the outcome preferred by the majority regardless of the intensity of individual preferences. The payment for votes may be through either artificial or real currencies (e.g. with tokens distributed equally among voting members or with real money).[2]Quadratic voting is a variant of cumulative voting in the class of cardinal voting. It differs from cumulative voting by altering “the cost” and “the vote” relation from linear to quadratic.Quadratic voting is based upon market principles, where each voter is given a budget of vote credits that they have the personal decisions and delegation to spend in order to influence the outcome of a range of decisions. If a participant has a strong support for or against a specific decision, additional votes could be allocated to proportionally demonstrate the voter’s support. A vote pricing rule determines the cost of additional votes, with each vote becoming increasingly more expensive. By increasing voter credit costs, this demonstrates an individual’s support and interests toward the particular decision.If money is used, it is eventually cycled back to the voters based upon per capita. Both E Glen Weyl and Steven Lalley conducted research in which they claim to demonstrate that this decision-making policy expedites efficiency as the number of voters increases.The simplified formula on how quadratic voting functions iscost to the voter = (number of votes)2.[3]the allocation of decision-making power to the people who contribute to the network. When the voting power of DAO members is based on their actual contributions and cannot be transferred to others, power asymmetries tend to be much less acute. Various reputation systems have been designed to that end, for instance by DAOstack, Colony, or SourceCred.Finally, it’s worth mentioning that communities can be decentralized not only because of institutional or crypto-economic incentives, but also because they want to be. Decentralization is an ethos. MetaCartel, MetaGame, 1Hive or the Commons Stack all use tokenized instruments for measuring value and weighing voting power, but they also cultivate a participatory culture that is the most authentic and resilient way to embody decentralization.[1]OrganizationThe “O” of DAO points to the seemingly simplest term: “Organization”. It’s also the most deceitful. When one thinks about an organization, the image of a firm comes to mind. But it’s hard to picture a firm that would be decentralized and autonomous. Firms’ structures are hierarchical — even cooperatives appoint executives. And firms transact between each other thanks to contractual relationships that heavily rely on the rule of law, so they can hardly be considered autonomous.Therefore, we still need to question the nature of DAOs as organizational structures.The creators of TheDAO claim that it was a decentralized fund, controlled by a crowd of investors, without any corporate structure in the traditional sense: no shareholders, no executives, no management. Corporations have sometimes been defined as a collection of contracts between different parties (shareholders, directors, employees, customers, suppliers, etc).DAOs might be seen as organized economies, rather than automated organizations.Collectives are closer to traditional organizations: They have a smaller number of active members and a wider range of activities than protocol DAOs. 1Hive, dOrg, or MetaGame are examples of collectives that use DAOs to be more transparent, more open, more flexible and fairer towards their members than usual corporations. DXDao is worth a special mention, as a hybrid DAO that gathers an open collective to govern multiple DeFi protocols.Not a thing, but a dynamic processIt is now pretty obvious that there is no such thing as a pure “Decentralized Autonomous Organization”. DAOs are imperfectly decentralized, very moderately autonomous, and hardly comparable to organizations in the traditional sense.In 2020, it’s time to acknowledge the fact that most DAOs are actually associated with firms or foundations. In most cases, it is not a problem but a necessity. DAOs are less a thing than a gradual, dynamic process. It is possible to “daoify” organizations, firms, markets, and protocols, i.e., to use blockchain technologies to transform these entities into transparent, rent-free networks owned by their members.Author ConclusionsSo what can we do with a DAO in 2020? It’s not prime time yet. I don’t think that we’re close to seeing mass adoption. DAOs are still a weird name for an obscure concept, only known by a tiny group of people, even compared to the number of people interested in cryptocurrencies and blockchain technologies in general.It may seem paradoxical. A lot of people today are interested in self-organization, collectives, and cooperatives. Many appreciate the shortcomings of both free markets and political institutions with respect to the mounting social and environmental challenges of our time. One might think that a technology designed to help communities to govern and decide by themselves, to produce and share value together, would raise more interest from the general public.My personal belief is that DAOs are poised to succeed once “crypto” itself becomes mainstream. DAOs suffer from the same plague as Dapps in general: user experience is simply unbearable to people unfamiliar with crypto. I appreciate the efforts made by Aragon, Colony, Abridged, and others to make things prettier, faster, and simpler. We’re just not on par yet with Web 2 applications. As long as this is the case, there will only be a handful of people willing to use DAOs.Bonus points for taking care of externalities as well. The environment and society at large are the invisible contributors that we all benefit from and rely upon. DAOs help to create inclusive economies, through transparency and cooperation incentives.When the year of the DAOs eventually happens, it will be because they serve the common good, rather than the limited interests of the crypto community.[1]AragonAragon is a suite of applications and services that enable new forms of global communities.Communities can organize around capital assets, currency, or tokens, which will increase in value as more people hold and use that asset to participate in the community.By providing the tools for people to turn a community, cause, or even a meme into its own economy, we can unlock a long-tail of DAOs that are not limited just to protocols like Ethereum or Bitcoin.Aragon not only provides basic financial tools like tokenization but can create reproducible and broadly applicable templates for defining the boundaries of a community and flowing value to contributors over the internet without traditional intermediaries.But this isn’t science fiction, it’s happening now, and you can be a part of it.[3]Aragon ClientAragon Client, regarded as Aragon v1, is the first generation protocol to create DAOs. It was initially launched in 2019 and became the dominant solution on the market. You can check the organizations powered by Aragon here.As Aragon is looking to replace Aragon Client (v1) with new and better Aragon Govern (v2) it should not be used for any new DAOs. However, it is still a valid tool to test your MVP.AnatomyAragon Client DAOs are made up of tiny independent software programs, known as “smart contracts”. Together they build up an operating system that runs the DAOs. It is called aragonOS and is similar to MacOS or Linux.The core of aragonOS is the Kernel, a brain of the DAO. There is also ACL, which ensures that only authorized accounts (People) and contracts (Programs) have permission to perform specific actions in an organization. For example it can enforce that only ANT token holders can vote on a proposal.To expand functionality, DAO can install apps, developed for aragonOS. They will expand functionality and allow new actions for the members. You can add pre-built apps from Aragon or develop your custom applications.Some examples of available applications that can be added to Aragon Client DAOs are Token, Voting or Finance apps. Yet there are many more available.[4]Usefull Aragon Apps for Devs:DAO management with a MultiSig (Decentralized)Assign the desired permissions in the Client DAO to the MultiSigAragon Client DAOs have an access control system, where each action is protected by a set of permission records. Only someone who has specific permission can perform the action. You can read more about permissions here.That is why we need to assign the MultiSig wallet to a range of permissions that correspond to the actions we want it to be able to perform.[5]Agent AppThe Agent app enables Aragon organizations to interact directly with any other smart contract on Ethereum. Before Agent, an organization would have to nominate a trusted party to interact with an Ethereum smart contract on its behalf: for example, an organization would send some Dai to one of its employees, who would then be trusted to lend the Dai on Compound, earn interest, and then send the interest plus the principle back to the organization. Now with Agent, an organization can (for example) lend its Dai out on Compound directly, without having to trust any intermediaries.[6]Permissions SettingThe Permissions app is used to view all of the current permissions that have been set in an organization and add or remove permissions as needed. The permissions set by the Permissions app define which entities have what permissions to perform various actions in an organization. For example, any account may have permission to create a vote but only tokenholders in an organization may have permission to cast a vote.[7]Optimistic GovernanceOptimistic Governance?Sometimes called ‘lazy’ consensus, Optimistic Governance assumes that all actions are legitimate unless proven otherwise. In practice, this means that governance becomes a perpetual-motion machine of proposals that are scheduled as on-chain transactions to execute by default unless they are specifically challenged in Aragon Court during a Dispute Time Delay set by the DAO.How exactly is my DAO protected from malicious actors?First, every DAO must have a DAO Agreement that defines the purpose and parameters of the community. Any transaction that deviates from this document may be challenged in Aragon Court and have its collateral slashed.Second, for more community control, Govern DAOs may restrict executive power to a whitelist of selected addresses so only they may schedule the transfer of funds.‍Third, DAO transactions cannot be executed immediately. Instead, these are delayed by a period of time set by the DAO. This assumes ‘optimistically’ that all transactions are legitimate but gives any DAO member the opportunity to challenge the transaction in our decentralized dispute resolution system, Aragon Court. A successful challenge will cancel the transaction.‍Fourth, a collateral deposit set by the DAO is required to schedule a transfer of DAO funds. This is refunded at the close of the execution window unless someone has successfully challenged the transaction in Aragon Court, in which case it will be forfeited to the Court Guardians.[8]  NOTE: Is it possible to to do an optimistic govern that verifies from Maxcoin as mainchain the DAO address in a decentralized way?, and so that all transactions que aproved but only if there is no difference of the amount of maxcoin on the maxcoin net vs the wrapped version?  Aragon Voice  Aragon Voice is a key component of the voting infrastructure we are building for Web 3.0, powering unstoppable decentralized governance with zero voting costs. For the first time ever, anyone with an Ethereum address can design and implement On-Chain Proposals for their ERC20 project, where votes can be cast without gas fees, and are recorded as metadata both to Ethereum and IPFS, or Signaling Proposals that use a centralized backend but are universally verifiable on our custom vote-counting blockchain, Vochain. Only On-Chain Proposal creators need to pay the gas costs of deploying the information to mainnet.Aragon Voice will be released as a standalone tool before later being integrated into all Decentralized Autonomous Organizations (DAOs) on the Aragon v2 OpenStack along with Aragon Govern and Aragon Court. At this early stage, we see Aragon Voice as being used primarily as a signaling tool for ERC20 tokens including, naturally, our own ANT token. In the future we are planning to extend functionality to other standards, such as ERC721 - the Non-Fungible Token standard - as well as trustlessly binding votes to transaction executions on the Ethereum mainnet.Built on the Vocdoni OpenStack. To power Aragon Voice, we are using the Vocdoni OpenStack: a fully anonymous voting protocol by design, ensuring data availability and censorship-resistant protocol communication. This technology is also the base for layer-2 (L2), a voting-specific blockchain named Vochain, used for accounting ballots transparently. The protocol can be configured to represent nearly all ballot types, including simple voting, quadratic, weighted, ranked-choice, multiple-choice, plus options such as whether the results are revealed in real-time or locked until the process concludes. Vocdoni’s voting technology has already been used to secure votes of organizations with hundreds of thousands of members, including most recently, a pilot project of digital voting with a survey during the last Catalonia elections.[9]Supported votingWeighted VotingWeighted voting can exist in a policy or law making body in which each representative has a variable voting power (weighted vote) as determined by the number principals who have made that person their proxy, or the population or the electorate they serve.By contrast weighted preference/preferential voting typically amasses a qualitative verdict of the voters. Within this form of ranked voting, a few advanced proportional voting methods ask each voter to grade the suitability for office of as many candidates as they wish. For example, the merit of each candidate to be graded Excellent, Very Good, Good, Acceptable, Poor, or Reject (and where all these grade count, assigned values such as 5 to 0). Under this, each member can by chosen by and/or could exercise a different weighted vote. In this way, each and every voting citizen is represented proportionately. No citizen’s vote is “wasted”.A third definition is weighted bias voting. This exists in an electoral system in which not all the votes inherently vary in strength depending on the voter. Some voters, perhaps based on expertise, are given more weight than others. This is directly analogous to some preference shares. Listing Rules, the risk of a derivative suit, and of misrepresentation action may impose a cap on any enhanced voting rights attached, or to be attached, to preference shares. In the same way the existence of Unreformed House of Commons franchise-appointing small municipal corporations, was among injustices partly addressed by the Reform Act 1832 (widely known as the First Great Reform Act) in the United Kingdom. Being in the financial pocket of a sponsor, these were rebuked as pocket boroughs. [10]Quadratic  its best function is with a Mutiple Choise but based on aNote: Is this the same as Convition Voting?Quadratic voting is a collective decision-making procedure which involves individuals allocating votes to express the degree of their preferences, rather than just the direction of their preferences. By doing so, quadratic voting seeks to address issues of voting paradox and majority rule. Quadratic voting works by allowing users to “pay” for additional votes on a given matter to express their support for given issues more strongly, resulting in voting outcomes that are aligned with the highest willingness to pay outcome, rather than just the outcome preferred by the majority regardless of the intensity of individual preferences. The payment for votes may be through either artificial or real currencies (e.g. with tokens distributed equally among voting members or with real money). Quadratic voting is a variant of cumulative voting in the class of cardinal voting. It differs from cumulative voting by altering “the cost” and “the vote” relation from linear to quadratic.Quadratic voting is based upon market principles, where each voter is given a budget of vote credits that they have the personal decisions and delegation to spend in order to influence the outcome of a range of decisions. If a participant has a strong support for or against a specific decision, additional votes could be allocated to proportionally demonstrate the voter’s support. A vote pricing rule determines the cost of additional votes, with each vote becoming increasingly more expensive. By increasing voter credit costs, this demonstrates an individual’s support and interests toward the particular decision. If money is used, it is eventually cycled back to the voters based upon per capita. Both E Glen Weyl and Steven Lalley conducted research in which they claim to demonstrate that this decision-making policy expedites efficiency as the number of voters increases. The simplified formula on how quadratic voting functions iscost to the voter = (number of votes)^2. [11]Ranked-choiceA ranked-choice voting system (RCV) is an electoral system in which voters rank candidates by preference on their ballots. If a candidate wins a majority of first-preference votes, he or she is declared the winner. If no candidate wins a majority of first-preference votes, the candidate with the fewest first-preference votes is eliminated. First-preference votes cast for the failed candidate are eliminated, lifting the second-preference choices indicated on those ballots. A new tally is conducted to determine whether any candidate has won a majority of the adjusted votes. The process is repeated until a candidate wins an outright majority.[12]Multiple-choice  must verify it is correct oneMultiple non-transferable vote (MNTV), also known as plurality-at-large voting, block vote, block voting, or party block voting is a non-proportional voting system for electing several representatives from a single multi-member electoral district using a series of check boxes and tallying votes similar to a plurality election. Multiple winners are elected simultaneously to serve the district. Block voting is not a system for obtaining proportional representation; instead the usual result is that where the candidates divide into definitive parties (especially for example where those parties have party lines which are whipped) the most popular party in the district sees its full slate of candidates elected, resulting in a landslide.The term “plurality at-large” is in common usage in elections for representative members of a body who are elected or appointed to represent the whole membership of the body (for example, a city, state or province, nation, club or association). Where the system is used in a territory divided into multi-member electoral districts the system is commonly referred to as “block voting” or the “bloc vote”. Block voting as described in this article is “unlimited voting”, unlike “limited voting”, where a voter has fewer votes than the number of seats contested.This system is usually based on a single round of voting, but it can sometimes appear in a runoff (two-round) version, as in some local elections in France, where candidates who do not receive an absolute majority must compete in a second round. In these cases, it is more accurately called “majority-at-large voting”.The term “block voting” sometimes means simple plurality election of slates in multi-member districts. In such a system, each party puts forward a slate of candidates, a voter casts just one vote, and the party winning a plurality of votes sees its whole slate elected, winning all the seats.[13]Insured binding execution using Aragon Court*Free proposal creation*  ToDo : Search * onesWhat is Vocdoni? (Paid)Vocdoni is a project inside of the Aragon ecosystem, which is aimed at developing secure digital voting and governance solutions using decentralized technologies.The main product is the eponymous governance platform, which allows participation in conventional organizations with the maximum guarantees of security and privacy. The platform is formed by a set of tools that not only serves for digital voting but also covers all other management aspects of an organization, such as membership management, dues payments and fundraising, as well as verifiable communication.The voting protocol that powers the platform is designed to be universally verifiable, secure, and resistant to attack and censorship through the use of blockchain technology, together with decentralized technologies and cryptographic mechanisms, such as zero-knowledge proofs.[14]Aragon CourtAragon Court is one of the core components of the Aragon OpenStack. It is a dispute resolution protocol that handles subjective disputes that cannot be solved by smart contracts. This is achieved by having a set of guardians drafted for each dispute who will vote to guarantee a certain ruling.Aragon Court fundamentalsGuardians sign up to get drafted into the court by activating ANT tokens in Aragon Court’s smart contract. The more tokens a guardian has activated, the higher the probability of getting drafted. Plurality ruleUnlike traditional courts, Aragon Court guardians are not asked to rule impartially on disputes but instead are asked to rule the way they expect the plurality of guardians to rule. Aragon Court attempts to find what the subjective truth is (i.e. the most correct outcome of a dispute) with a Schelling point. Every time a guardian is drafted for a dispute, a portion of their activated tokens is locked until the dispute is finalized. To incentivize consensus, guardians who don’t vote in favor of the final ruling have their locked tokens slashed. Guardians who vote in favor of the final ruling are rewarded with dispute fees and tokens from any guardians who voted for a minority ruling.“Proof of stake”The Aragon Court is a permissionless protocol where any participant can come and go without asking for anyone’s authorization. Therefore, the protocol must function with integrity even in the presence of malicious actors, who may pose as multiple guardians at once to “Sybil attack” the Court. The defense against these attacks begins with a simple staking system where guardian impact is weighted by their active stake of tokens.You may be thinking that if a cartel gets a majority of tokens, they’ll have a majority weight and attack the system unopposed since they’ll influence more than 50% of the decisions. However, Aragon Court uses multiple countermeasures including iterative appeals, commit and reveal voting, and locked withdrawal periods that are designed to dissuade a cartel from acquiring and misusing a majority of tokens.Guardian responsibilities, Guardians are expected to perform certain duties and responsibilities, like reviewing arguments for a dispute and casting a vote. In order to help guardians properly execute their tasks, the Aragon Court Dashboard is available and provides all the tools they need.[15]References[1] https://ethereum.org/en/dao/[2] https://medium.com/giveth/conviction-voting-a-novel-continuous-decision-making-alternative-to-governance-aa746cfb9475[3] https://aragon.org/about-aragon[4] https://help.aragon.org/category/12-templates[5] https://help.aragon.org/article/100-dao-management-with-multisig[6] https://help.aragon.org/article/21-permissions[7] https://help.aragon.org/article/37-agent[8] https://aragon.org/aragon-govern#use-aragon-govern[9] https://blog.aragon.org/introducing-aragon-voice/[10] https://en.wikipedia.org/wiki/Weighted_voting[11]https://en.wikipedia.org/wiki/Quadratic_voting[12] https://ballotpedia.org/Ranked-choice_voting_(RCV)[13] https://en.wikipedia.org/wiki/Multiple_non-transferable_vote[14] https://help.aragon.org/article/59-what-is-vocdoni[15] https://help.aragon.org/article/41-aragon-courtToDoCheck Developer notes:Getting Started: https://hack.aragon.org/docs/getting-startedAragon app framework: https://hack.aragon.org/docs/tutorialContact.Developers  David Serrano  p1r0"
  },
  
  {
    "title": "Setup Maxcoin Virtualbox Development Environment",
    "url": "/posts/maxcoin-wallet-virtualbox/",
    "categories": "Developers, Wallets",
    "tags": "HOWTOs, Wallets, Developers, Tools",
    "date": "2021-11-21 03:41:00 -0500",
    





    "snippet": "This is a HOW TO build and run “The Maxcoin Core Wallet” with VirtualBox  Maxcoin’s enhacements are being done using VirtualBox for testing and developing the wallet.Please follow this manual to keep up with maxcoin standards.Requirements  VirtualBox  7Zip or some other program to un7zip  Ubuntu 18.04.3 VDI          VirtualBox (VDI) 64bit  Size: 1.5GB approx.      Install and Setup the environment  Download and install 7Zip or already have a software that can un7zip 7zip files.  Download VirtualBox from https://www.virtualbox.org/wiki/Downloads and get the one that fits your Operative System.  Download the Ubuntu 18.04.3 VDI (this is the virtualbox image)  Install virtualbox following one of the manuals          For windows follow the Part 1 only      For MacOS follow the Part 2 only      For Linux follow the Part 3 only        un7zip the downloaded VDI 7zip file  Follow the osboxes guide to setup the extracted image https://www.osboxes.org/guide/ at the VirtualBox SectionSetup/Mount a folder to share between guest and host.To setup a shared folder between guest and host use this guide  NOTE:The guest folder is used for dev and git updates.The host folder is used to compile and run source code in the guest folder.LicenseUNLICENSE.Contact.Developers  David Serrano  p1r0ToDo/Proposals  Use a smaller VirtualBox Image (to reduce resources and increase speed)          ubuntu server lts      lubuntu        Integrate the linked manuals to the main howto and use them as references instead  Check license for documentationLinks &amp;amp; References  Document Source"
  },
  
  {
    "title": "Maxcoin Website Organization Proposal",
    "url": "/posts/maxcoin-website-proposal/",
    "categories": "Developers, Website",
    "tags": "website, proposal",
    "date": "2021-11-16 07:41:00 -0500",
    





    "snippet": "Some perspectives and philosophies to follow:      keep it simple and stupid    Website navigation based on user types    Website navigation to simplified fit everything    Documentation Organized by user types and labels    Website features    References  Website navigation based on user typesThe goal is to analyze the maxcoin users type and what type of requirements for consulting maxcoin website they might have. We intend to make the website developers oriented, in order to attract more developers into the project.  Users/Investors/HODLers (Pasive)  require:          Documentation      FAQ      Explorer        Traders (Pasive)  require:          Documentation?      Explorer      Features      Summary      RELASE DATES (No DATES)        Community (Active)  require:          Documentation (Governance, Support, etc..)      FAQ      Social Media      Profiles or anon?      Organization      Manifesto and Philosophy        Governance (Active)require:          Documentation (Governance, Support, etc…)      Trust or proof of beeing active      Organization      Profiles or anon?      Manifesto and Philosophy        Developers (Priority + Active)  require:          Documentation      wbsite sources (git, testnet explorer, etc.)      Development tools (Projects, Wallets, Dapps, MIP)      Best Practices      Dev Rules        Miners (Priority + Active)  require:          Documentation      Mining tools (Projects, Wallets, Dapps)      Organization      Other?      Website navigation to simplified fit everythingA simple structure to fit everything for everyone  In the current Website we see to many options:      Home (Landing Page must be there)    Features    Community    Roadmap    Downloads    Mining    Exchanges    Explorers    Media  Documentation based on UserTypes and Labels  based on the user types and labels I propose two types of browsing for documentation which are the following:      By UserTypesWe can create Sections for the most active types of users but also a FAQ and simple abstract version for pasive users.        By LabelsWe create labels per article so that we have a better way to access or manage acording to the amount of article types and specific research areas.  Maxcoin Website Index (ToDo)  Based on the user types, and documentation we propose the following index:  Landing (about layout) Static          get back  here by clicking the logo? or a small go back button      what is maxcoin      Maxcoin Fundamentals      Features (summary md)      Roadmap (based on archives Layout)      Media                  Articles          Postcast          Videos                      Use Maxcoin (about layout) Static [users]          Downloads      Wallets                  Maxcoin Core          VirtualBox          Electrum                    Explorers      Exchanges                  self hosted          third parties                    User Documentation        Developers (Categories layout)          Includes Roadman Projects      Projects      WebPage      Maxcoin Features      Organization      Resources index (git, testnet explorer, etc.)      Development tools (Projects, Wallets, Dapps, MIP)      Best Practices      Dev Rules        Community (about layout) Static [users]          Community Documentation      includes Governance / DAO                  Documentation (Governance, Support, etc…)          Activity Levels                    Includes Roadman Projects      FAQ      Manifesto and Philosophy        Mine Maxcoin (about layout)          Organization      Pools      Software      Hardware      Miners Documentation        Documentation (Categories layout)          Community                  FAQ          User Documenation          Community Documentation          Includes community          Includes Roadman Projects                    Developers                  Git projects          Features          Current Projects          Dev Roadmap          MRCs (Maxcoin Request for Comments)                    Miners                  Pools          Software          Hardware          Miners Documentation                    Governance                  Governance documentation          DAO          Testnet                    Research                  Resources          Papers (Articles)          MIPs (Maxcoin Improvement Proposals)                          MIP02                                          Links all types of documentation        Decentralized GatewaysWebsite features  Light and Dark Mode  Language access  Others…Cool Reference Sites  https://docs.uniswap.org/sdk/guides/quick-start  https://xrpl.org/concepts.html  https://ethereum.org/en/community/grants/  https://vitalik.ca/"
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/theme-chripy/",
    "categories": "Developers, Website",
    "tags": "website, jekyll, theme",
    "date": "2021-11-16 07:41:00 -0500",
    





    "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphI wandered lonely as a cloudThat floats on high o’er vales and hills,When all at once I saw a crowd,A host, of golden daffodils;Beside the lake, beneath the trees,Fluttering and dancing in the breeze.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    Task list  TODO  Completed  Defeat COVID-19          Vaccine production      Economic recovery      People smile again      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line to shows the Block Quote.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Images  Default (with caption)Full screen width and center alignment  Shadowshadow effect (visible in light mode)  Left aligned      Float to left    “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.”        Float to right    “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.”  Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dMathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Inline codeThis is an example of Inline Code.Code blockCommonThis is a common code snippet, without syntax highlight and line number.Specific LanguagesConsole$ env |grep SHELLSHELL=/usr/local/bin/bashPYENV_SHELL=bashShellif [ $? -ne 0 ]; then    echo &quot;The command was not successful.&quot;;    #do the needful / exitfi;Specific filename@import  &quot;colors/light-typography&quot;,  &quot;colors/dark-typography&quot;Reverse Footnote            The footnote source &amp;#8617;              The 2nd footnote source &amp;#8617;      "
  }
  
]

